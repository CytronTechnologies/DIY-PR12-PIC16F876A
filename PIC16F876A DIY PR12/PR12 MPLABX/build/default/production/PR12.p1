Version 3.2 HI-TECH Software Intermediate Code
[p mainexit ]
"31 i2c.h
[v _i2c_initialize `(v ~T0 0 ef ]
"32 i2c_rtc.h
[v _i2c_rtc_initialize `(v ~T0 0 ef ]
"873 C:\Program Files (x86)\Microchip\xc8\v1.00\include\pic16f876a.h
[v _ADCON1 `Vuc ~T0 0 e@159 ]
"598
[v _TRISA `Vuc ~T0 0 e@133 ]
"615
[v _TRISB `Vuc ~T0 0 e@134 ]
"634
[v _TRISC `Vuc ~T0 0 e@135 ]
"1044
[v _RA3 `Vb ~T0 0 e@43 ]
"1043
[v _RA2 `Vb ~T0 0 e@42 ]
"68 PR12.c
[v _send_config `(v ~T0 0 ef1`uc ]
"76
[v _readrtc `(v ~T0 0 ef ]
"1057 C:\Program Files (x86)\Microchip\xc8\v1.00\include\pic16f876a.h
[v _RC0 `Vb ~T0 0 e@56 ]
"1058
[v _RC1 `Vb ~T0 0 e@57 ]
"71 PR12.c
[v _lcd_goto `(v ~T0 0 ef1`uc ]
"74
[v _send_dec `(v ~T0 0 ef2`ul`uc ]
"67
[v _delay `(v ~T0 0 ef1`ul ]
"69
[v _send_char `(v ~T0 0 ef1`uc ]
"73
[v _send_string `(v ~T0 0 ef1`*Cuc ]
"66 i2c_rtc.h
[v _i2c_rtc_set_seconds `(v ~T0 0 ef1`uc ]
"100
[v _i2c_rtc_set_minutes `(v ~T0 0 ef1`uc ]
"134
[v _i2c_rtc_set_hours `(v ~T0 0 ef1`uc ]
"168
[v _i2c_rtc_set_day `(v ~T0 0 ef1`uc ]
"202
[v _i2c_rtc_set_date `(v ~T0 0 ef1`uc ]
"236
[v _i2c_rtc_set_month `(v ~T0 0 ef1`uc ]
"270
[v _i2c_rtc_set_year `(v ~T0 0 ef1`uc ]
"49
[v _uc_i2c_rtc_get_seconds `(uc ~T0 0 ef ]
"83
[v _uc_i2c_rtc_get_minutes `(uc ~T0 0 ef ]
"117
[v _uc_i2c_rtc_get_hours `(uc ~T0 0 ef ]
"151
[v _uc_i2c_rtc_get_day `(uc ~T0 0 ef ]
"185
[v _uc_i2c_rtc_get_date `(uc ~T0 0 ef ]
"219
[v _uc_i2c_rtc_get_month `(uc ~T0 0 ef ]
"253
[v _uc_i2c_rtc_get_year `(uc ~T0 0 ef ]
"1041 C:\Program Files (x86)\Microchip\xc8\v1.00\include\pic16f876a.h
[v _RA0 `Vb ~T0 0 e@40 ]
"184
[v _PORTB `Vuc ~T0 0 e@6 ]
"70 PR12.c
[v _e_pulse `(v ~T0 0 ef ]
"1042 C:\Program Files (x86)\Microchip\xc8\v1.00\include\pic16f876a.h
[v _RA1 `Vb ~T0 0 e@41 ]
[; ;pic16f876a.h: 104: extern volatile unsigned char INDF @ 0x000;
[; ;pic16f876a.h: 106: extern volatile union {
[; ;pic16f876a.h: 107: struct {
[; ;pic16f876a.h: 108: unsigned INDF :8;
[; ;pic16f876a.h: 109: };
[; ;pic16f876a.h: 110: } INDFbits @ 0x000;
[; ;pic16f876a.h: 113: extern volatile unsigned char TMR0 @ 0x001;
[; ;pic16f876a.h: 115: extern volatile union {
[; ;pic16f876a.h: 116: struct {
[; ;pic16f876a.h: 117: unsigned TMR0 :8;
[; ;pic16f876a.h: 118: };
[; ;pic16f876a.h: 119: } TMR0bits @ 0x001;
[; ;pic16f876a.h: 122: extern volatile unsigned char PCL @ 0x002;
[; ;pic16f876a.h: 124: extern volatile union {
[; ;pic16f876a.h: 125: struct {
[; ;pic16f876a.h: 126: unsigned PCL :8;
[; ;pic16f876a.h: 127: };
[; ;pic16f876a.h: 128: } PCLbits @ 0x002;
[; ;pic16f876a.h: 131: extern volatile unsigned char STATUS @ 0x003;
[; ;pic16f876a.h: 133: extern volatile union {
[; ;pic16f876a.h: 134: struct {
[; ;pic16f876a.h: 135: unsigned C :1;
[; ;pic16f876a.h: 136: unsigned DC :1;
[; ;pic16f876a.h: 137: unsigned Z :1;
[; ;pic16f876a.h: 138: unsigned nPD :1;
[; ;pic16f876a.h: 139: unsigned nTO :1;
[; ;pic16f876a.h: 140: unsigned RP :2;
[; ;pic16f876a.h: 141: unsigned IRP :1;
[; ;pic16f876a.h: 142: };
[; ;pic16f876a.h: 143: struct {
[; ;pic16f876a.h: 144: unsigned :5;
[; ;pic16f876a.h: 145: unsigned RP0 :1;
[; ;pic16f876a.h: 146: unsigned RP1 :1;
[; ;pic16f876a.h: 147: };
[; ;pic16f876a.h: 148: struct {
[; ;pic16f876a.h: 149: unsigned CARRY :1;
[; ;pic16f876a.h: 150: };
[; ;pic16f876a.h: 151: struct {
[; ;pic16f876a.h: 152: unsigned :2;
[; ;pic16f876a.h: 153: unsigned ZERO :1;
[; ;pic16f876a.h: 154: };
[; ;pic16f876a.h: 155: } STATUSbits @ 0x003;
[; ;pic16f876a.h: 158: extern volatile unsigned char FSR @ 0x004;
[; ;pic16f876a.h: 160: extern volatile union {
[; ;pic16f876a.h: 161: struct {
[; ;pic16f876a.h: 162: unsigned FSR :8;
[; ;pic16f876a.h: 163: };
[; ;pic16f876a.h: 164: } FSRbits @ 0x004;
[; ;pic16f876a.h: 167: extern volatile unsigned char PORTA @ 0x005;
[; ;pic16f876a.h: 169: extern volatile union {
[; ;pic16f876a.h: 170: struct {
[; ;pic16f876a.h: 171: unsigned RA0 :1;
[; ;pic16f876a.h: 172: unsigned RA1 :1;
[; ;pic16f876a.h: 173: unsigned RA2 :1;
[; ;pic16f876a.h: 174: unsigned RA3 :1;
[; ;pic16f876a.h: 175: unsigned RA4 :1;
[; ;pic16f876a.h: 176: unsigned RA5 :1;
[; ;pic16f876a.h: 177: };
[; ;pic16f876a.h: 178: struct {
[; ;pic16f876a.h: 179: unsigned RA :8;
[; ;pic16f876a.h: 180: };
[; ;pic16f876a.h: 181: } PORTAbits @ 0x005;
[; ;pic16f876a.h: 184: extern volatile unsigned char PORTB @ 0x006;
[; ;pic16f876a.h: 186: extern volatile union {
[; ;pic16f876a.h: 187: struct {
[; ;pic16f876a.h: 188: unsigned RB0 :1;
[; ;pic16f876a.h: 189: unsigned RB1 :1;
[; ;pic16f876a.h: 190: unsigned RB2 :1;
[; ;pic16f876a.h: 191: unsigned RB3 :1;
[; ;pic16f876a.h: 192: unsigned RB4 :1;
[; ;pic16f876a.h: 193: unsigned RB5 :1;
[; ;pic16f876a.h: 194: unsigned RB6 :1;
[; ;pic16f876a.h: 195: unsigned RB7 :1;
[; ;pic16f876a.h: 196: };
[; ;pic16f876a.h: 197: struct {
[; ;pic16f876a.h: 198: unsigned RB :8;
[; ;pic16f876a.h: 199: };
[; ;pic16f876a.h: 200: } PORTBbits @ 0x006;
[; ;pic16f876a.h: 203: extern volatile unsigned char PORTC @ 0x007;
[; ;pic16f876a.h: 205: extern volatile union {
[; ;pic16f876a.h: 206: struct {
[; ;pic16f876a.h: 207: unsigned RC0 :1;
[; ;pic16f876a.h: 208: unsigned RC1 :1;
[; ;pic16f876a.h: 209: unsigned RC2 :1;
[; ;pic16f876a.h: 210: unsigned RC3 :1;
[; ;pic16f876a.h: 211: unsigned RC4 :1;
[; ;pic16f876a.h: 212: unsigned RC5 :1;
[; ;pic16f876a.h: 213: unsigned RC6 :1;
[; ;pic16f876a.h: 214: unsigned RC7 :1;
[; ;pic16f876a.h: 215: };
[; ;pic16f876a.h: 216: struct {
[; ;pic16f876a.h: 217: unsigned RC :8;
[; ;pic16f876a.h: 218: };
[; ;pic16f876a.h: 219: } PORTCbits @ 0x007;
[; ;pic16f876a.h: 222: extern volatile unsigned char PCLATH @ 0x00A;
[; ;pic16f876a.h: 224: extern volatile union {
[; ;pic16f876a.h: 225: struct {
[; ;pic16f876a.h: 226: unsigned PCLATH :5;
[; ;pic16f876a.h: 227: };
[; ;pic16f876a.h: 228: } PCLATHbits @ 0x00A;
[; ;pic16f876a.h: 231: extern volatile unsigned char INTCON @ 0x00B;
[; ;pic16f876a.h: 233: extern volatile union {
[; ;pic16f876a.h: 234: struct {
[; ;pic16f876a.h: 235: unsigned RBIF :1;
[; ;pic16f876a.h: 236: unsigned INTF :1;
[; ;pic16f876a.h: 237: unsigned TMR0IF :1;
[; ;pic16f876a.h: 238: unsigned RBIE :1;
[; ;pic16f876a.h: 239: unsigned INTE :1;
[; ;pic16f876a.h: 240: unsigned TMR0IE :1;
[; ;pic16f876a.h: 241: unsigned PEIE :1;
[; ;pic16f876a.h: 242: unsigned GIE :1;
[; ;pic16f876a.h: 243: };
[; ;pic16f876a.h: 244: struct {
[; ;pic16f876a.h: 245: unsigned :2;
[; ;pic16f876a.h: 246: unsigned T0IF :1;
[; ;pic16f876a.h: 247: unsigned :2;
[; ;pic16f876a.h: 248: unsigned T0IE :1;
[; ;pic16f876a.h: 249: };
[; ;pic16f876a.h: 250: } INTCONbits @ 0x00B;
[; ;pic16f876a.h: 253: extern volatile unsigned char PIR1 @ 0x00C;
[; ;pic16f876a.h: 255: extern volatile union {
[; ;pic16f876a.h: 256: struct {
[; ;pic16f876a.h: 257: unsigned TMR1IF :1;
[; ;pic16f876a.h: 258: unsigned TMR2IF :1;
[; ;pic16f876a.h: 259: unsigned CCP1IF :1;
[; ;pic16f876a.h: 260: unsigned SSPIF :1;
[; ;pic16f876a.h: 261: unsigned TXIF :1;
[; ;pic16f876a.h: 262: unsigned RCIF :1;
[; ;pic16f876a.h: 263: unsigned ADIF :1;
[; ;pic16f876a.h: 264: };
[; ;pic16f876a.h: 265: struct {
[; ;pic16f876a.h: 266: unsigned TMR1IF :1;
[; ;pic16f876a.h: 267: unsigned TMR2IF :1;
[; ;pic16f876a.h: 268: unsigned CCP1IF :1;
[; ;pic16f876a.h: 269: unsigned SSPIF :1;
[; ;pic16f876a.h: 270: unsigned :2;
[; ;pic16f876a.h: 271: unsigned ADIF :1;
[; ;pic16f876a.h: 272: };
[; ;pic16f876a.h: 273: } PIR1bits @ 0x00C;
[; ;pic16f876a.h: 276: extern volatile unsigned char PIR2 @ 0x00D;
[; ;pic16f876a.h: 278: extern volatile union {
[; ;pic16f876a.h: 279: struct {
[; ;pic16f876a.h: 280: unsigned CCP2IF :1;
[; ;pic16f876a.h: 281: unsigned :2;
[; ;pic16f876a.h: 282: unsigned BCLIF :1;
[; ;pic16f876a.h: 283: unsigned EEIF :1;
[; ;pic16f876a.h: 284: unsigned :1;
[; ;pic16f876a.h: 285: unsigned CMIF :1;
[; ;pic16f876a.h: 286: };
[; ;pic16f876a.h: 287: } PIR2bits @ 0x00D;
[; ;pic16f876a.h: 290: extern volatile unsigned short TMR1 @ 0x00E;
[; ;pic16f876a.h: 292: extern volatile union {
[; ;pic16f876a.h: 293: struct {
[; ;pic16f876a.h: 294: unsigned TMR1 :16;
[; ;pic16f876a.h: 295: };
[; ;pic16f876a.h: 296: } TMR1bits @ 0x00E;
[; ;pic16f876a.h: 299: extern volatile unsigned char TMR1L @ 0x00E;
[; ;pic16f876a.h: 301: extern volatile union {
[; ;pic16f876a.h: 302: struct {
[; ;pic16f876a.h: 303: unsigned TMR1L :8;
[; ;pic16f876a.h: 304: };
[; ;pic16f876a.h: 305: } TMR1Lbits @ 0x00E;
[; ;pic16f876a.h: 308: extern volatile unsigned char TMR1H @ 0x00F;
[; ;pic16f876a.h: 310: extern volatile union {
[; ;pic16f876a.h: 311: struct {
[; ;pic16f876a.h: 312: unsigned TMR1H :8;
[; ;pic16f876a.h: 313: };
[; ;pic16f876a.h: 314: } TMR1Hbits @ 0x00F;
[; ;pic16f876a.h: 317: extern volatile unsigned char T1CON @ 0x010;
[; ;pic16f876a.h: 319: extern volatile union {
[; ;pic16f876a.h: 320: struct {
[; ;pic16f876a.h: 321: unsigned TMR1ON :1;
[; ;pic16f876a.h: 322: unsigned TMR1CS :1;
[; ;pic16f876a.h: 323: unsigned nT1SYNC :1;
[; ;pic16f876a.h: 324: unsigned T1OSCEN :1;
[; ;pic16f876a.h: 325: unsigned T1CKPS :2;
[; ;pic16f876a.h: 326: };
[; ;pic16f876a.h: 327: struct {
[; ;pic16f876a.h: 328: unsigned :2;
[; ;pic16f876a.h: 329: unsigned T1SYNC :1;
[; ;pic16f876a.h: 330: unsigned :1;
[; ;pic16f876a.h: 331: unsigned T1CKPS0 :1;
[; ;pic16f876a.h: 332: unsigned T1CKPS1 :1;
[; ;pic16f876a.h: 333: };
[; ;pic16f876a.h: 334: struct {
[; ;pic16f876a.h: 335: unsigned :2;
[; ;pic16f876a.h: 336: unsigned T1INSYNC :1;
[; ;pic16f876a.h: 337: };
[; ;pic16f876a.h: 338: } T1CONbits @ 0x010;
[; ;pic16f876a.h: 341: extern volatile unsigned char TMR2 @ 0x011;
[; ;pic16f876a.h: 343: extern volatile union {
[; ;pic16f876a.h: 344: struct {
[; ;pic16f876a.h: 345: unsigned TMR2 :8;
[; ;pic16f876a.h: 346: };
[; ;pic16f876a.h: 347: } TMR2bits @ 0x011;
[; ;pic16f876a.h: 350: extern volatile unsigned char T2CON @ 0x012;
[; ;pic16f876a.h: 352: extern volatile union {
[; ;pic16f876a.h: 353: struct {
[; ;pic16f876a.h: 354: unsigned T2CKPS :2;
[; ;pic16f876a.h: 355: unsigned TMR2ON :1;
[; ;pic16f876a.h: 356: unsigned TOUTPS :4;
[; ;pic16f876a.h: 357: };
[; ;pic16f876a.h: 358: struct {
[; ;pic16f876a.h: 359: unsigned T2CKPS0 :1;
[; ;pic16f876a.h: 360: unsigned T2CKPS1 :1;
[; ;pic16f876a.h: 361: unsigned :1;
[; ;pic16f876a.h: 362: unsigned TOUTPS0 :1;
[; ;pic16f876a.h: 363: unsigned TOUTPS1 :1;
[; ;pic16f876a.h: 364: unsigned TOUTPS2 :1;
[; ;pic16f876a.h: 365: unsigned TOUTPS3 :1;
[; ;pic16f876a.h: 366: };
[; ;pic16f876a.h: 367: } T2CONbits @ 0x012;
[; ;pic16f876a.h: 370: extern volatile unsigned char SSPBUF @ 0x013;
[; ;pic16f876a.h: 372: extern volatile union {
[; ;pic16f876a.h: 373: struct {
[; ;pic16f876a.h: 374: unsigned SSPBUF :8;
[; ;pic16f876a.h: 375: };
[; ;pic16f876a.h: 376: } SSPBUFbits @ 0x013;
[; ;pic16f876a.h: 379: extern volatile unsigned char SSPCON @ 0x014;
[; ;pic16f876a.h: 381: extern volatile union {
[; ;pic16f876a.h: 382: struct {
[; ;pic16f876a.h: 383: unsigned SSPM :4;
[; ;pic16f876a.h: 384: unsigned CKP :1;
[; ;pic16f876a.h: 385: unsigned SSPEN :1;
[; ;pic16f876a.h: 386: unsigned SSPOV :1;
[; ;pic16f876a.h: 387: unsigned WCOL :1;
[; ;pic16f876a.h: 388: };
[; ;pic16f876a.h: 389: struct {
[; ;pic16f876a.h: 390: unsigned SSPM0 :1;
[; ;pic16f876a.h: 391: unsigned SSPM1 :1;
[; ;pic16f876a.h: 392: unsigned SSPM2 :1;
[; ;pic16f876a.h: 393: unsigned SSPM3 :1;
[; ;pic16f876a.h: 394: };
[; ;pic16f876a.h: 395: } SSPCONbits @ 0x014;
[; ;pic16f876a.h: 398: extern volatile unsigned short CCPR1 @ 0x015;
[; ;pic16f876a.h: 400: extern volatile union {
[; ;pic16f876a.h: 401: struct {
[; ;pic16f876a.h: 402: unsigned CCPR1 :16;
[; ;pic16f876a.h: 403: };
[; ;pic16f876a.h: 404: } CCPR1bits @ 0x015;
[; ;pic16f876a.h: 407: extern volatile unsigned char CCPR1L @ 0x015;
[; ;pic16f876a.h: 409: extern volatile union {
[; ;pic16f876a.h: 410: struct {
[; ;pic16f876a.h: 411: unsigned CCPR1L :8;
[; ;pic16f876a.h: 412: };
[; ;pic16f876a.h: 413: } CCPR1Lbits @ 0x015;
[; ;pic16f876a.h: 416: extern volatile unsigned char CCPR1H @ 0x016;
[; ;pic16f876a.h: 418: extern volatile union {
[; ;pic16f876a.h: 419: struct {
[; ;pic16f876a.h: 420: unsigned CCPR1H :8;
[; ;pic16f876a.h: 421: };
[; ;pic16f876a.h: 422: } CCPR1Hbits @ 0x016;
[; ;pic16f876a.h: 425: extern volatile unsigned char CCP1CON @ 0x017;
[; ;pic16f876a.h: 427: extern volatile union {
[; ;pic16f876a.h: 428: struct {
[; ;pic16f876a.h: 429: unsigned CCP1M :4;
[; ;pic16f876a.h: 430: unsigned CCP1Y :1;
[; ;pic16f876a.h: 431: unsigned CCP1X :1;
[; ;pic16f876a.h: 432: };
[; ;pic16f876a.h: 433: struct {
[; ;pic16f876a.h: 434: unsigned CCP1M0 :1;
[; ;pic16f876a.h: 435: unsigned CCP1M1 :1;
[; ;pic16f876a.h: 436: unsigned CCP1M2 :1;
[; ;pic16f876a.h: 437: unsigned CCP1M3 :1;
[; ;pic16f876a.h: 438: };
[; ;pic16f876a.h: 439: } CCP1CONbits @ 0x017;
[; ;pic16f876a.h: 442: extern volatile unsigned char RCSTA @ 0x018;
[; ;pic16f876a.h: 444: extern volatile union {
[; ;pic16f876a.h: 445: struct {
[; ;pic16f876a.h: 446: unsigned RX9D :1;
[; ;pic16f876a.h: 447: unsigned OERR :1;
[; ;pic16f876a.h: 448: unsigned FERR :1;
[; ;pic16f876a.h: 449: unsigned ADDEN :1;
[; ;pic16f876a.h: 450: unsigned CREN :1;
[; ;pic16f876a.h: 451: unsigned SREN :1;
[; ;pic16f876a.h: 452: unsigned RX9 :1;
[; ;pic16f876a.h: 453: unsigned SPEN :1;
[; ;pic16f876a.h: 454: };
[; ;pic16f876a.h: 455: struct {
[; ;pic16f876a.h: 456: unsigned RCD8 :1;
[; ;pic16f876a.h: 457: unsigned :5;
[; ;pic16f876a.h: 458: unsigned RC9 :1;
[; ;pic16f876a.h: 459: };
[; ;pic16f876a.h: 460: struct {
[; ;pic16f876a.h: 461: unsigned :6;
[; ;pic16f876a.h: 462: unsigned nRC8 :1;
[; ;pic16f876a.h: 463: };
[; ;pic16f876a.h: 464: struct {
[; ;pic16f876a.h: 465: unsigned :6;
[; ;pic16f876a.h: 466: unsigned RC8_9 :1;
[; ;pic16f876a.h: 467: };
[; ;pic16f876a.h: 468: } RCSTAbits @ 0x018;
[; ;pic16f876a.h: 471: extern volatile unsigned char TXREG @ 0x019;
[; ;pic16f876a.h: 473: extern volatile union {
[; ;pic16f876a.h: 474: struct {
[; ;pic16f876a.h: 475: unsigned TXREG :8;
[; ;pic16f876a.h: 476: };
[; ;pic16f876a.h: 477: } TXREGbits @ 0x019;
[; ;pic16f876a.h: 480: extern volatile unsigned char RCREG @ 0x01A;
[; ;pic16f876a.h: 482: extern volatile union {
[; ;pic16f876a.h: 483: struct {
[; ;pic16f876a.h: 484: unsigned RCREG :8;
[; ;pic16f876a.h: 485: };
[; ;pic16f876a.h: 486: } RCREGbits @ 0x01A;
[; ;pic16f876a.h: 489: extern volatile unsigned short CCPR2 @ 0x01B;
[; ;pic16f876a.h: 491: extern volatile union {
[; ;pic16f876a.h: 492: struct {
[; ;pic16f876a.h: 493: unsigned CCPR2 :16;
[; ;pic16f876a.h: 494: };
[; ;pic16f876a.h: 495: } CCPR2bits @ 0x01B;
[; ;pic16f876a.h: 498: extern volatile unsigned char CCPR2L @ 0x01B;
[; ;pic16f876a.h: 500: extern volatile union {
[; ;pic16f876a.h: 501: struct {
[; ;pic16f876a.h: 502: unsigned CCPR2L :8;
[; ;pic16f876a.h: 503: };
[; ;pic16f876a.h: 504: } CCPR2Lbits @ 0x01B;
[; ;pic16f876a.h: 507: extern volatile unsigned char CCPR2H @ 0x01C;
[; ;pic16f876a.h: 509: extern volatile union {
[; ;pic16f876a.h: 510: struct {
[; ;pic16f876a.h: 511: unsigned CCPR2H :8;
[; ;pic16f876a.h: 512: };
[; ;pic16f876a.h: 513: } CCPR2Hbits @ 0x01C;
[; ;pic16f876a.h: 516: extern volatile unsigned char CCP2CON @ 0x01D;
[; ;pic16f876a.h: 518: extern volatile union {
[; ;pic16f876a.h: 519: struct {
[; ;pic16f876a.h: 520: unsigned CCP2M :4;
[; ;pic16f876a.h: 521: unsigned CCP2Y :1;
[; ;pic16f876a.h: 522: unsigned CCP2X :1;
[; ;pic16f876a.h: 523: };
[; ;pic16f876a.h: 524: struct {
[; ;pic16f876a.h: 525: unsigned CCP2M0 :1;
[; ;pic16f876a.h: 526: unsigned CCP2M1 :1;
[; ;pic16f876a.h: 527: unsigned CCP2M2 :1;
[; ;pic16f876a.h: 528: unsigned CCP2M3 :1;
[; ;pic16f876a.h: 529: };
[; ;pic16f876a.h: 530: } CCP2CONbits @ 0x01D;
[; ;pic16f876a.h: 533: extern volatile unsigned char ADRESH @ 0x01E;
[; ;pic16f876a.h: 535: extern volatile union {
[; ;pic16f876a.h: 536: struct {
[; ;pic16f876a.h: 537: unsigned ADRESH :8;
[; ;pic16f876a.h: 538: };
[; ;pic16f876a.h: 539: } ADRESHbits @ 0x01E;
[; ;pic16f876a.h: 542: extern volatile unsigned char ADCON0 @ 0x01F;
[; ;pic16f876a.h: 544: extern volatile union {
[; ;pic16f876a.h: 545: struct {
[; ;pic16f876a.h: 546: unsigned ADON :1;
[; ;pic16f876a.h: 547: unsigned :1;
[; ;pic16f876a.h: 548: unsigned GO_nDONE :1;
[; ;pic16f876a.h: 549: unsigned CHS :3;
[; ;pic16f876a.h: 550: unsigned ADCS :2;
[; ;pic16f876a.h: 551: };
[; ;pic16f876a.h: 552: struct {
[; ;pic16f876a.h: 553: unsigned ADON :1;
[; ;pic16f876a.h: 554: unsigned :1;
[; ;pic16f876a.h: 555: unsigned GO_nDONE :1;
[; ;pic16f876a.h: 556: unsigned CHS :3;
[; ;pic16f876a.h: 557: unsigned ADCS :2;
[; ;pic16f876a.h: 558: };
[; ;pic16f876a.h: 559: struct {
[; ;pic16f876a.h: 560: unsigned :2;
[; ;pic16f876a.h: 561: unsigned GO :1;
[; ;pic16f876a.h: 562: unsigned CHS0 :1;
[; ;pic16f876a.h: 563: unsigned CHS1 :1;
[; ;pic16f876a.h: 564: unsigned CHS2 :1;
[; ;pic16f876a.h: 565: unsigned ADCS0 :1;
[; ;pic16f876a.h: 566: unsigned ADCS1 :1;
[; ;pic16f876a.h: 567: };
[; ;pic16f876a.h: 568: struct {
[; ;pic16f876a.h: 569: unsigned :2;
[; ;pic16f876a.h: 570: unsigned nDONE :1;
[; ;pic16f876a.h: 571: };
[; ;pic16f876a.h: 572: struct {
[; ;pic16f876a.h: 573: unsigned :2;
[; ;pic16f876a.h: 574: unsigned GO_DONE :1;
[; ;pic16f876a.h: 575: };
[; ;pic16f876a.h: 576: } ADCON0bits @ 0x01F;
[; ;pic16f876a.h: 579: extern volatile unsigned char OPTION_REG @ 0x081;
[; ;pic16f876a.h: 581: extern volatile union {
[; ;pic16f876a.h: 582: struct {
[; ;pic16f876a.h: 583: unsigned PS :3;
[; ;pic16f876a.h: 584: unsigned PSA :1;
[; ;pic16f876a.h: 585: unsigned T0SE :1;
[; ;pic16f876a.h: 586: unsigned T0CS :1;
[; ;pic16f876a.h: 587: unsigned INTEDG :1;
[; ;pic16f876a.h: 588: unsigned nRBPU :1;
[; ;pic16f876a.h: 589: };
[; ;pic16f876a.h: 590: struct {
[; ;pic16f876a.h: 591: unsigned PS0 :1;
[; ;pic16f876a.h: 592: unsigned PS1 :1;
[; ;pic16f876a.h: 593: unsigned PS2 :1;
[; ;pic16f876a.h: 594: };
[; ;pic16f876a.h: 595: } OPTION_REGbits @ 0x081;
[; ;pic16f876a.h: 598: extern volatile unsigned char TRISA @ 0x085;
[; ;pic16f876a.h: 600: extern volatile union {
[; ;pic16f876a.h: 601: struct {
[; ;pic16f876a.h: 602: unsigned TRISA0 :1;
[; ;pic16f876a.h: 603: unsigned TRISA1 :1;
[; ;pic16f876a.h: 604: unsigned TRISA2 :1;
[; ;pic16f876a.h: 605: unsigned TRISA3 :1;
[; ;pic16f876a.h: 606: unsigned TRISA4 :1;
[; ;pic16f876a.h: 607: unsigned TRISA5 :1;
[; ;pic16f876a.h: 608: };
[; ;pic16f876a.h: 609: struct {
[; ;pic16f876a.h: 610: unsigned TRISA :8;
[; ;pic16f876a.h: 611: };
[; ;pic16f876a.h: 612: } TRISAbits @ 0x085;
[; ;pic16f876a.h: 615: extern volatile unsigned char TRISB @ 0x086;
[; ;pic16f876a.h: 617: extern volatile union {
[; ;pic16f876a.h: 618: struct {
[; ;pic16f876a.h: 619: unsigned TRISB0 :1;
[; ;pic16f876a.h: 620: unsigned TRISB1 :1;
[; ;pic16f876a.h: 621: unsigned TRISB2 :1;
[; ;pic16f876a.h: 622: unsigned TRISB3 :1;
[; ;pic16f876a.h: 623: unsigned TRISB4 :1;
[; ;pic16f876a.h: 624: unsigned TRISB5 :1;
[; ;pic16f876a.h: 625: unsigned TRISB6 :1;
[; ;pic16f876a.h: 626: unsigned TRISB7 :1;
[; ;pic16f876a.h: 627: };
[; ;pic16f876a.h: 628: struct {
[; ;pic16f876a.h: 629: unsigned TRISB :8;
[; ;pic16f876a.h: 630: };
[; ;pic16f876a.h: 631: } TRISBbits @ 0x086;
[; ;pic16f876a.h: 634: extern volatile unsigned char TRISC @ 0x087;
[; ;pic16f876a.h: 636: extern volatile union {
[; ;pic16f876a.h: 637: struct {
[; ;pic16f876a.h: 638: unsigned TRISC0 :1;
[; ;pic16f876a.h: 639: unsigned TRISC1 :1;
[; ;pic16f876a.h: 640: unsigned TRISC2 :1;
[; ;pic16f876a.h: 641: unsigned TRISC3 :1;
[; ;pic16f876a.h: 642: unsigned TRISC4 :1;
[; ;pic16f876a.h: 643: unsigned TRISC5 :1;
[; ;pic16f876a.h: 644: unsigned TRISC6 :1;
[; ;pic16f876a.h: 645: unsigned TRISC7 :1;
[; ;pic16f876a.h: 646: };
[; ;pic16f876a.h: 647: struct {
[; ;pic16f876a.h: 648: unsigned TRISC :8;
[; ;pic16f876a.h: 649: };
[; ;pic16f876a.h: 650: } TRISCbits @ 0x087;
[; ;pic16f876a.h: 653: extern volatile unsigned char PIE1 @ 0x08C;
[; ;pic16f876a.h: 655: extern volatile union {
[; ;pic16f876a.h: 656: struct {
[; ;pic16f876a.h: 657: unsigned TMR1IE :1;
[; ;pic16f876a.h: 658: unsigned TMR2IE :1;
[; ;pic16f876a.h: 659: unsigned CCP1IE :1;
[; ;pic16f876a.h: 660: unsigned SSPIE :1;
[; ;pic16f876a.h: 661: unsigned TXIE :1;
[; ;pic16f876a.h: 662: unsigned RCIE :1;
[; ;pic16f876a.h: 663: unsigned ADIE :1;
[; ;pic16f876a.h: 664: };
[; ;pic16f876a.h: 665: } PIE1bits @ 0x08C;
[; ;pic16f876a.h: 668: extern volatile unsigned char PIE2 @ 0x08D;
[; ;pic16f876a.h: 670: extern volatile union {
[; ;pic16f876a.h: 671: struct {
[; ;pic16f876a.h: 672: unsigned CCP2IE :1;
[; ;pic16f876a.h: 673: unsigned :2;
[; ;pic16f876a.h: 674: unsigned BCLIE :1;
[; ;pic16f876a.h: 675: unsigned EEIE :1;
[; ;pic16f876a.h: 676: unsigned :1;
[; ;pic16f876a.h: 677: unsigned CMIE :1;
[; ;pic16f876a.h: 678: };
[; ;pic16f876a.h: 679: } PIE2bits @ 0x08D;
[; ;pic16f876a.h: 682: extern volatile unsigned char PCON @ 0x08E;
[; ;pic16f876a.h: 684: extern volatile union {
[; ;pic16f876a.h: 685: struct {
[; ;pic16f876a.h: 686: unsigned nBOR :1;
[; ;pic16f876a.h: 687: unsigned nPOR :1;
[; ;pic16f876a.h: 688: };
[; ;pic16f876a.h: 689: struct {
[; ;pic16f876a.h: 690: unsigned nBO :1;
[; ;pic16f876a.h: 691: };
[; ;pic16f876a.h: 692: } PCONbits @ 0x08E;
[; ;pic16f876a.h: 695: extern volatile unsigned char SSPCON2 @ 0x091;
[; ;pic16f876a.h: 697: extern volatile union {
[; ;pic16f876a.h: 698: struct {
[; ;pic16f876a.h: 699: unsigned SEN :1;
[; ;pic16f876a.h: 700: unsigned RSEN :1;
[; ;pic16f876a.h: 701: unsigned PEN :1;
[; ;pic16f876a.h: 702: unsigned RCEN :1;
[; ;pic16f876a.h: 703: unsigned ACKEN :1;
[; ;pic16f876a.h: 704: unsigned ACKDT :1;
[; ;pic16f876a.h: 705: unsigned ACKSTAT :1;
[; ;pic16f876a.h: 706: unsigned GCEN :1;
[; ;pic16f876a.h: 707: };
[; ;pic16f876a.h: 708: } SSPCON2bits @ 0x091;
[; ;pic16f876a.h: 711: extern volatile unsigned char PR2 @ 0x092;
[; ;pic16f876a.h: 713: extern volatile union {
[; ;pic16f876a.h: 714: struct {
[; ;pic16f876a.h: 715: unsigned PR2 :8;
[; ;pic16f876a.h: 716: };
[; ;pic16f876a.h: 717: } PR2bits @ 0x092;
[; ;pic16f876a.h: 720: extern volatile unsigned char SSPADD @ 0x093;
[; ;pic16f876a.h: 722: extern volatile union {
[; ;pic16f876a.h: 723: struct {
[; ;pic16f876a.h: 724: unsigned SSPADD :8;
[; ;pic16f876a.h: 725: };
[; ;pic16f876a.h: 726: } SSPADDbits @ 0x093;
[; ;pic16f876a.h: 729: extern volatile unsigned char SSPSTAT @ 0x094;
[; ;pic16f876a.h: 731: extern volatile union {
[; ;pic16f876a.h: 732: struct {
[; ;pic16f876a.h: 733: unsigned BF :1;
[; ;pic16f876a.h: 734: unsigned UA :1;
[; ;pic16f876a.h: 735: unsigned R_nW :1;
[; ;pic16f876a.h: 736: unsigned S :1;
[; ;pic16f876a.h: 737: unsigned P :1;
[; ;pic16f876a.h: 738: unsigned D_nA :1;
[; ;pic16f876a.h: 739: unsigned CKE :1;
[; ;pic16f876a.h: 740: unsigned SMP :1;
[; ;pic16f876a.h: 741: };
[; ;pic16f876a.h: 742: struct {
[; ;pic16f876a.h: 743: unsigned BF :1;
[; ;pic16f876a.h: 744: unsigned UA :1;
[; ;pic16f876a.h: 745: unsigned R_nW :1;
[; ;pic16f876a.h: 746: unsigned S :1;
[; ;pic16f876a.h: 747: unsigned P :1;
[; ;pic16f876a.h: 748: unsigned D_nA :1;
[; ;pic16f876a.h: 749: unsigned CKE :1;
[; ;pic16f876a.h: 750: unsigned SMP :1;
[; ;pic16f876a.h: 751: };
[; ;pic16f876a.h: 752: struct {
[; ;pic16f876a.h: 753: unsigned :2;
[; ;pic16f876a.h: 754: unsigned R :1;
[; ;pic16f876a.h: 755: unsigned :2;
[; ;pic16f876a.h: 756: unsigned D :1;
[; ;pic16f876a.h: 757: };
[; ;pic16f876a.h: 758: struct {
[; ;pic16f876a.h: 759: unsigned :2;
[; ;pic16f876a.h: 760: unsigned I2C_READ :1;
[; ;pic16f876a.h: 761: unsigned I2C_START :1;
[; ;pic16f876a.h: 762: unsigned I2C_STOP :1;
[; ;pic16f876a.h: 763: unsigned I2C_DATA :1;
[; ;pic16f876a.h: 764: };
[; ;pic16f876a.h: 765: struct {
[; ;pic16f876a.h: 766: unsigned :2;
[; ;pic16f876a.h: 767: unsigned nW :1;
[; ;pic16f876a.h: 768: unsigned :2;
[; ;pic16f876a.h: 769: unsigned nA :1;
[; ;pic16f876a.h: 770: };
[; ;pic16f876a.h: 771: struct {
[; ;pic16f876a.h: 772: unsigned :2;
[; ;pic16f876a.h: 773: unsigned nWRITE :1;
[; ;pic16f876a.h: 774: unsigned :2;
[; ;pic16f876a.h: 775: unsigned nADDRESS :1;
[; ;pic16f876a.h: 776: };
[; ;pic16f876a.h: 777: struct {
[; ;pic16f876a.h: 778: unsigned :2;
[; ;pic16f876a.h: 779: unsigned R_W :1;
[; ;pic16f876a.h: 780: unsigned :2;
[; ;pic16f876a.h: 781: unsigned D_A :1;
[; ;pic16f876a.h: 782: };
[; ;pic16f876a.h: 783: struct {
[; ;pic16f876a.h: 784: unsigned :2;
[; ;pic16f876a.h: 785: unsigned READ_WRITE :1;
[; ;pic16f876a.h: 786: unsigned :2;
[; ;pic16f876a.h: 787: unsigned DATA_ADDRESS :1;
[; ;pic16f876a.h: 788: };
[; ;pic16f876a.h: 789: } SSPSTATbits @ 0x094;
[; ;pic16f876a.h: 792: extern volatile unsigned char TXSTA @ 0x098;
[; ;pic16f876a.h: 794: extern volatile union {
[; ;pic16f876a.h: 795: struct {
[; ;pic16f876a.h: 796: unsigned TX9D :1;
[; ;pic16f876a.h: 797: unsigned TRMT :1;
[; ;pic16f876a.h: 798: unsigned BRGH :1;
[; ;pic16f876a.h: 799: unsigned :1;
[; ;pic16f876a.h: 800: unsigned SYNC :1;
[; ;pic16f876a.h: 801: unsigned TXEN :1;
[; ;pic16f876a.h: 802: unsigned TX9 :1;
[; ;pic16f876a.h: 803: unsigned CSRC :1;
[; ;pic16f876a.h: 804: };
[; ;pic16f876a.h: 805: struct {
[; ;pic16f876a.h: 806: unsigned TXD8 :1;
[; ;pic16f876a.h: 807: unsigned :5;
[; ;pic16f876a.h: 808: unsigned nTX8 :1;
[; ;pic16f876a.h: 809: };
[; ;pic16f876a.h: 810: struct {
[; ;pic16f876a.h: 811: unsigned :6;
[; ;pic16f876a.h: 812: unsigned TX8_9 :1;
[; ;pic16f876a.h: 813: };
[; ;pic16f876a.h: 814: } TXSTAbits @ 0x098;
[; ;pic16f876a.h: 817: extern volatile unsigned char SPBRG @ 0x099;
[; ;pic16f876a.h: 819: extern volatile union {
[; ;pic16f876a.h: 820: struct {
[; ;pic16f876a.h: 821: unsigned SPBRG :8;
[; ;pic16f876a.h: 822: };
[; ;pic16f876a.h: 823: } SPBRGbits @ 0x099;
[; ;pic16f876a.h: 826: extern volatile unsigned char CMCON @ 0x09C;
[; ;pic16f876a.h: 828: extern volatile union {
[; ;pic16f876a.h: 829: struct {
[; ;pic16f876a.h: 830: unsigned CM :3;
[; ;pic16f876a.h: 831: unsigned CIS :1;
[; ;pic16f876a.h: 832: unsigned C1INV :1;
[; ;pic16f876a.h: 833: unsigned C2INV :1;
[; ;pic16f876a.h: 834: unsigned C1OUT :1;
[; ;pic16f876a.h: 835: unsigned C2OUT :1;
[; ;pic16f876a.h: 836: };
[; ;pic16f876a.h: 837: struct {
[; ;pic16f876a.h: 838: unsigned CM0 :1;
[; ;pic16f876a.h: 839: unsigned CM1 :1;
[; ;pic16f876a.h: 840: unsigned CM2 :1;
[; ;pic16f876a.h: 841: };
[; ;pic16f876a.h: 842: } CMCONbits @ 0x09C;
[; ;pic16f876a.h: 845: extern volatile unsigned char CVRCON @ 0x09D;
[; ;pic16f876a.h: 847: extern volatile union {
[; ;pic16f876a.h: 848: struct {
[; ;pic16f876a.h: 849: unsigned CVR :4;
[; ;pic16f876a.h: 850: unsigned :1;
[; ;pic16f876a.h: 851: unsigned CVRR :1;
[; ;pic16f876a.h: 852: unsigned CVROE :1;
[; ;pic16f876a.h: 853: unsigned CVREN :1;
[; ;pic16f876a.h: 854: };
[; ;pic16f876a.h: 855: struct {
[; ;pic16f876a.h: 856: unsigned CVR0 :1;
[; ;pic16f876a.h: 857: unsigned CVR1 :1;
[; ;pic16f876a.h: 858: unsigned CVR2 :1;
[; ;pic16f876a.h: 859: unsigned CVR3 :1;
[; ;pic16f876a.h: 860: };
[; ;pic16f876a.h: 861: } CVRCONbits @ 0x09D;
[; ;pic16f876a.h: 864: extern volatile unsigned char ADRESL @ 0x09E;
[; ;pic16f876a.h: 866: extern volatile union {
[; ;pic16f876a.h: 867: struct {
[; ;pic16f876a.h: 868: unsigned ADRESL :8;
[; ;pic16f876a.h: 869: };
[; ;pic16f876a.h: 870: } ADRESLbits @ 0x09E;
[; ;pic16f876a.h: 873: extern volatile unsigned char ADCON1 @ 0x09F;
[; ;pic16f876a.h: 875: extern volatile union {
[; ;pic16f876a.h: 876: struct {
[; ;pic16f876a.h: 877: unsigned PCFG :4;
[; ;pic16f876a.h: 878: unsigned :2;
[; ;pic16f876a.h: 879: unsigned ADCS2 :1;
[; ;pic16f876a.h: 880: unsigned ADFM :1;
[; ;pic16f876a.h: 881: };
[; ;pic16f876a.h: 882: struct {
[; ;pic16f876a.h: 883: unsigned PCFG0 :1;
[; ;pic16f876a.h: 884: unsigned PCFG1 :1;
[; ;pic16f876a.h: 885: unsigned PCFG2 :1;
[; ;pic16f876a.h: 886: unsigned PCFG3 :1;
[; ;pic16f876a.h: 887: };
[; ;pic16f876a.h: 888: } ADCON1bits @ 0x09F;
[; ;pic16f876a.h: 891: extern volatile unsigned char EEDATA @ 0x10C;
[; ;pic16f876a.h: 893: extern volatile union {
[; ;pic16f876a.h: 894: struct {
[; ;pic16f876a.h: 895: unsigned EEDATA :8;
[; ;pic16f876a.h: 896: };
[; ;pic16f876a.h: 897: } EEDATAbits @ 0x10C;
[; ;pic16f876a.h: 900: extern volatile unsigned char EEADR @ 0x10D;
[; ;pic16f876a.h: 902: extern volatile union {
[; ;pic16f876a.h: 903: struct {
[; ;pic16f876a.h: 904: unsigned EEADR :8;
[; ;pic16f876a.h: 905: };
[; ;pic16f876a.h: 906: } EEADRbits @ 0x10D;
[; ;pic16f876a.h: 909: extern volatile unsigned char EEDATH @ 0x10E;
[; ;pic16f876a.h: 911: extern volatile union {
[; ;pic16f876a.h: 912: struct {
[; ;pic16f876a.h: 913: unsigned EEDATH :6;
[; ;pic16f876a.h: 914: };
[; ;pic16f876a.h: 915: } EEDATHbits @ 0x10E;
[; ;pic16f876a.h: 918: extern volatile unsigned char EEADRH @ 0x10F;
[; ;pic16f876a.h: 920: extern volatile union {
[; ;pic16f876a.h: 921: struct {
[; ;pic16f876a.h: 922: unsigned EEADRH :5;
[; ;pic16f876a.h: 923: };
[; ;pic16f876a.h: 924: } EEADRHbits @ 0x10F;
[; ;pic16f876a.h: 927: extern volatile unsigned char EECON1 @ 0x18C;
[; ;pic16f876a.h: 929: extern volatile union {
[; ;pic16f876a.h: 930: struct {
[; ;pic16f876a.h: 931: unsigned RD :1;
[; ;pic16f876a.h: 932: unsigned WR :1;
[; ;pic16f876a.h: 933: unsigned WREN :1;
[; ;pic16f876a.h: 934: unsigned WRERR :1;
[; ;pic16f876a.h: 935: unsigned :3;
[; ;pic16f876a.h: 936: unsigned EEPGD :1;
[; ;pic16f876a.h: 937: };
[; ;pic16f876a.h: 938: } EECON1bits @ 0x18C;
[; ;pic16f876a.h: 941: extern volatile unsigned char EECON2 @ 0x18D;
[; ;pic16f876a.h: 943: extern volatile union {
[; ;pic16f876a.h: 944: struct {
[; ;pic16f876a.h: 945: unsigned EECON2 :8;
[; ;pic16f876a.h: 946: };
[; ;pic16f876a.h: 947: } EECON2bits @ 0x18D;
[; ;pic16f876a.h: 953: extern volatile bit ACKDT @ (((unsigned) &SSPCON2)*8) + 5;
[; ;pic16f876a.h: 954: extern volatile bit ACKEN @ (((unsigned) &SSPCON2)*8) + 4;
[; ;pic16f876a.h: 955: extern volatile bit ACKSTAT @ (((unsigned) &SSPCON2)*8) + 6;
[; ;pic16f876a.h: 956: extern volatile bit ADCS0 @ (((unsigned) &ADCON0)*8) + 6;
[; ;pic16f876a.h: 957: extern volatile bit ADCS1 @ (((unsigned) &ADCON0)*8) + 7;
[; ;pic16f876a.h: 958: extern volatile bit ADCS2 @ (((unsigned) &ADCON1)*8) + 6;
[; ;pic16f876a.h: 959: extern volatile bit ADDEN @ (((unsigned) &RCSTA)*8) + 3;
[; ;pic16f876a.h: 960: extern volatile bit ADFM @ (((unsigned) &ADCON1)*8) + 7;
[; ;pic16f876a.h: 961: extern volatile bit ADIE @ (((unsigned) &PIE1)*8) + 6;
[; ;pic16f876a.h: 962: extern volatile bit ADIF @ (((unsigned) &PIR1)*8) + 6;
[; ;pic16f876a.h: 963: extern volatile bit ADON @ (((unsigned) &ADCON0)*8) + 0;
[; ;pic16f876a.h: 964: extern volatile bit BCLIE @ (((unsigned) &PIE2)*8) + 3;
[; ;pic16f876a.h: 965: extern volatile bit BCLIF @ (((unsigned) &PIR2)*8) + 3;
[; ;pic16f876a.h: 966: extern volatile bit BF @ (((unsigned) &SSPSTAT)*8) + 0;
[; ;pic16f876a.h: 967: extern volatile bit BRGH @ (((unsigned) &TXSTA)*8) + 2;
[; ;pic16f876a.h: 968: extern volatile bit C1INV @ (((unsigned) &CMCON)*8) + 4;
[; ;pic16f876a.h: 969: extern volatile bit C1OUT @ (((unsigned) &CMCON)*8) + 6;
[; ;pic16f876a.h: 970: extern volatile bit C2INV @ (((unsigned) &CMCON)*8) + 5;
[; ;pic16f876a.h: 971: extern volatile bit C2OUT @ (((unsigned) &CMCON)*8) + 7;
[; ;pic16f876a.h: 972: extern volatile bit CARRY @ (((unsigned) &STATUS)*8) + 0;
[; ;pic16f876a.h: 973: extern volatile bit CCP1IE @ (((unsigned) &PIE1)*8) + 2;
[; ;pic16f876a.h: 974: extern volatile bit CCP1IF @ (((unsigned) &PIR1)*8) + 2;
[; ;pic16f876a.h: 975: extern volatile bit CCP1M0 @ (((unsigned) &CCP1CON)*8) + 0;
[; ;pic16f876a.h: 976: extern volatile bit CCP1M1 @ (((unsigned) &CCP1CON)*8) + 1;
[; ;pic16f876a.h: 977: extern volatile bit CCP1M2 @ (((unsigned) &CCP1CON)*8) + 2;
[; ;pic16f876a.h: 978: extern volatile bit CCP1M3 @ (((unsigned) &CCP1CON)*8) + 3;
[; ;pic16f876a.h: 979: extern volatile bit CCP1X @ (((unsigned) &CCP1CON)*8) + 5;
[; ;pic16f876a.h: 980: extern volatile bit CCP1Y @ (((unsigned) &CCP1CON)*8) + 4;
[; ;pic16f876a.h: 981: extern volatile bit CCP2IE @ (((unsigned) &PIE2)*8) + 0;
[; ;pic16f876a.h: 982: extern volatile bit CCP2IF @ (((unsigned) &PIR2)*8) + 0;
[; ;pic16f876a.h: 983: extern volatile bit CCP2M0 @ (((unsigned) &CCP2CON)*8) + 0;
[; ;pic16f876a.h: 984: extern volatile bit CCP2M1 @ (((unsigned) &CCP2CON)*8) + 1;
[; ;pic16f876a.h: 985: extern volatile bit CCP2M2 @ (((unsigned) &CCP2CON)*8) + 2;
[; ;pic16f876a.h: 986: extern volatile bit CCP2M3 @ (((unsigned) &CCP2CON)*8) + 3;
[; ;pic16f876a.h: 987: extern volatile bit CCP2X @ (((unsigned) &CCP2CON)*8) + 5;
[; ;pic16f876a.h: 988: extern volatile bit CCP2Y @ (((unsigned) &CCP2CON)*8) + 4;
[; ;pic16f876a.h: 989: extern volatile bit CHS0 @ (((unsigned) &ADCON0)*8) + 3;
[; ;pic16f876a.h: 990: extern volatile bit CHS1 @ (((unsigned) &ADCON0)*8) + 4;
[; ;pic16f876a.h: 991: extern volatile bit CHS2 @ (((unsigned) &ADCON0)*8) + 5;
[; ;pic16f876a.h: 992: extern volatile bit CIS @ (((unsigned) &CMCON)*8) + 3;
[; ;pic16f876a.h: 993: extern volatile bit CKE @ (((unsigned) &SSPSTAT)*8) + 6;
[; ;pic16f876a.h: 994: extern volatile bit CKP @ (((unsigned) &SSPCON)*8) + 4;
[; ;pic16f876a.h: 995: extern volatile bit CM0 @ (((unsigned) &CMCON)*8) + 0;
[; ;pic16f876a.h: 996: extern volatile bit CM1 @ (((unsigned) &CMCON)*8) + 1;
[; ;pic16f876a.h: 997: extern volatile bit CM2 @ (((unsigned) &CMCON)*8) + 2;
[; ;pic16f876a.h: 998: extern volatile bit CMIE @ (((unsigned) &PIE2)*8) + 6;
[; ;pic16f876a.h: 999: extern volatile bit CMIF @ (((unsigned) &PIR2)*8) + 6;
[; ;pic16f876a.h: 1000: extern volatile bit CREN @ (((unsigned) &RCSTA)*8) + 4;
[; ;pic16f876a.h: 1001: extern volatile bit CSRC @ (((unsigned) &TXSTA)*8) + 7;
[; ;pic16f876a.h: 1002: extern volatile bit CVR0 @ (((unsigned) &CVRCON)*8) + 0;
[; ;pic16f876a.h: 1003: extern volatile bit CVR1 @ (((unsigned) &CVRCON)*8) + 1;
[; ;pic16f876a.h: 1004: extern volatile bit CVR2 @ (((unsigned) &CVRCON)*8) + 2;
[; ;pic16f876a.h: 1005: extern volatile bit CVR3 @ (((unsigned) &CVRCON)*8) + 3;
[; ;pic16f876a.h: 1006: extern volatile bit CVREN @ (((unsigned) &CVRCON)*8) + 7;
[; ;pic16f876a.h: 1007: extern volatile bit CVROE @ (((unsigned) &CVRCON)*8) + 6;
[; ;pic16f876a.h: 1008: extern volatile bit CVRR @ (((unsigned) &CVRCON)*8) + 5;
[; ;pic16f876a.h: 1009: extern volatile bit DATA_ADDRESS @ (((unsigned) &SSPSTAT)*8) + 5;
[; ;pic16f876a.h: 1010: extern volatile bit DC @ (((unsigned) &STATUS)*8) + 1;
[; ;pic16f876a.h: 1011: extern volatile bit D_A @ (((unsigned) &SSPSTAT)*8) + 5;
[; ;pic16f876a.h: 1012: extern volatile bit D_nA @ (((unsigned) &SSPSTAT)*8) + 5;
[; ;pic16f876a.h: 1013: extern volatile bit EEIE @ (((unsigned) &PIE2)*8) + 4;
[; ;pic16f876a.h: 1014: extern volatile bit EEIF @ (((unsigned) &PIR2)*8) + 4;
[; ;pic16f876a.h: 1015: extern volatile bit EEPGD @ (((unsigned) &EECON1)*8) + 7;
[; ;pic16f876a.h: 1016: extern volatile bit FERR @ (((unsigned) &RCSTA)*8) + 2;
[; ;pic16f876a.h: 1017: extern volatile bit GCEN @ (((unsigned) &SSPCON2)*8) + 7;
[; ;pic16f876a.h: 1018: extern volatile bit GIE @ (((unsigned) &INTCON)*8) + 7;
[; ;pic16f876a.h: 1019: extern volatile bit GO @ (((unsigned) &ADCON0)*8) + 2;
[; ;pic16f876a.h: 1020: extern volatile bit GO_DONE @ (((unsigned) &ADCON0)*8) + 2;
[; ;pic16f876a.h: 1021: extern volatile bit GO_nDONE @ (((unsigned) &ADCON0)*8) + 2;
[; ;pic16f876a.h: 1022: extern volatile bit I2C_DATA @ (((unsigned) &SSPSTAT)*8) + 5;
[; ;pic16f876a.h: 1023: extern volatile bit I2C_READ @ (((unsigned) &SSPSTAT)*8) + 2;
[; ;pic16f876a.h: 1024: extern volatile bit I2C_START @ (((unsigned) &SSPSTAT)*8) + 3;
[; ;pic16f876a.h: 1025: extern volatile bit I2C_STOP @ (((unsigned) &SSPSTAT)*8) + 4;
[; ;pic16f876a.h: 1026: extern volatile bit INTE @ (((unsigned) &INTCON)*8) + 4;
[; ;pic16f876a.h: 1027: extern volatile bit INTEDG @ (((unsigned) &OPTION_REG)*8) + 6;
[; ;pic16f876a.h: 1028: extern volatile bit INTF @ (((unsigned) &INTCON)*8) + 1;
[; ;pic16f876a.h: 1029: extern volatile bit IRP @ (((unsigned) &STATUS)*8) + 7;
[; ;pic16f876a.h: 1030: extern volatile bit OERR @ (((unsigned) &RCSTA)*8) + 1;
[; ;pic16f876a.h: 1031: extern volatile bit PCFG0 @ (((unsigned) &ADCON1)*8) + 0;
[; ;pic16f876a.h: 1032: extern volatile bit PCFG1 @ (((unsigned) &ADCON1)*8) + 1;
[; ;pic16f876a.h: 1033: extern volatile bit PCFG2 @ (((unsigned) &ADCON1)*8) + 2;
[; ;pic16f876a.h: 1034: extern volatile bit PCFG3 @ (((unsigned) &ADCON1)*8) + 3;
[; ;pic16f876a.h: 1035: extern volatile bit PEIE @ (((unsigned) &INTCON)*8) + 6;
[; ;pic16f876a.h: 1036: extern volatile bit PEN @ (((unsigned) &SSPCON2)*8) + 2;
[; ;pic16f876a.h: 1037: extern volatile bit PS0 @ (((unsigned) &OPTION_REG)*8) + 0;
[; ;pic16f876a.h: 1038: extern volatile bit PS1 @ (((unsigned) &OPTION_REG)*8) + 1;
[; ;pic16f876a.h: 1039: extern volatile bit PS2 @ (((unsigned) &OPTION_REG)*8) + 2;
[; ;pic16f876a.h: 1040: extern volatile bit PSA @ (((unsigned) &OPTION_REG)*8) + 3;
[; ;pic16f876a.h: 1041: extern volatile bit RA0 @ (((unsigned) &PORTA)*8) + 0;
[; ;pic16f876a.h: 1042: extern volatile bit RA1 @ (((unsigned) &PORTA)*8) + 1;
[; ;pic16f876a.h: 1043: extern volatile bit RA2 @ (((unsigned) &PORTA)*8) + 2;
[; ;pic16f876a.h: 1044: extern volatile bit RA3 @ (((unsigned) &PORTA)*8) + 3;
[; ;pic16f876a.h: 1045: extern volatile bit RA4 @ (((unsigned) &PORTA)*8) + 4;
[; ;pic16f876a.h: 1046: extern volatile bit RA5 @ (((unsigned) &PORTA)*8) + 5;
[; ;pic16f876a.h: 1047: extern volatile bit RB0 @ (((unsigned) &PORTB)*8) + 0;
[; ;pic16f876a.h: 1048: extern volatile bit RB1 @ (((unsigned) &PORTB)*8) + 1;
[; ;pic16f876a.h: 1049: extern volatile bit RB2 @ (((unsigned) &PORTB)*8) + 2;
[; ;pic16f876a.h: 1050: extern volatile bit RB3 @ (((unsigned) &PORTB)*8) + 3;
[; ;pic16f876a.h: 1051: extern volatile bit RB4 @ (((unsigned) &PORTB)*8) + 4;
[; ;pic16f876a.h: 1052: extern volatile bit RB5 @ (((unsigned) &PORTB)*8) + 5;
[; ;pic16f876a.h: 1053: extern volatile bit RB6 @ (((unsigned) &PORTB)*8) + 6;
[; ;pic16f876a.h: 1054: extern volatile bit RB7 @ (((unsigned) &PORTB)*8) + 7;
[; ;pic16f876a.h: 1055: extern volatile bit RBIE @ (((unsigned) &INTCON)*8) + 3;
[; ;pic16f876a.h: 1056: extern volatile bit RBIF @ (((unsigned) &INTCON)*8) + 0;
[; ;pic16f876a.h: 1057: extern volatile bit RC0 @ (((unsigned) &PORTC)*8) + 0;
[; ;pic16f876a.h: 1058: extern volatile bit RC1 @ (((unsigned) &PORTC)*8) + 1;
[; ;pic16f876a.h: 1059: extern volatile bit RC2 @ (((unsigned) &PORTC)*8) + 2;
[; ;pic16f876a.h: 1060: extern volatile bit RC3 @ (((unsigned) &PORTC)*8) + 3;
[; ;pic16f876a.h: 1061: extern volatile bit RC4 @ (((unsigned) &PORTC)*8) + 4;
[; ;pic16f876a.h: 1062: extern volatile bit RC5 @ (((unsigned) &PORTC)*8) + 5;
[; ;pic16f876a.h: 1063: extern volatile bit RC6 @ (((unsigned) &PORTC)*8) + 6;
[; ;pic16f876a.h: 1064: extern volatile bit RC7 @ (((unsigned) &PORTC)*8) + 7;
[; ;pic16f876a.h: 1065: extern volatile bit RC8_9 @ (((unsigned) &RCSTA)*8) + 6;
[; ;pic16f876a.h: 1066: extern volatile bit RC9 @ (((unsigned) &RCSTA)*8) + 6;
[; ;pic16f876a.h: 1067: extern volatile bit RCD8 @ (((unsigned) &RCSTA)*8) + 0;
[; ;pic16f876a.h: 1068: extern volatile bit RCEN @ (((unsigned) &SSPCON2)*8) + 3;
[; ;pic16f876a.h: 1069: extern volatile bit RCIE @ (((unsigned) &PIE1)*8) + 5;
[; ;pic16f876a.h: 1070: extern volatile bit RCIF @ (((unsigned) &PIR1)*8) + 5;
[; ;pic16f876a.h: 1071: extern volatile bit RD @ (((unsigned) &EECON1)*8) + 0;
[; ;pic16f876a.h: 1072: extern volatile bit READ_WRITE @ (((unsigned) &SSPSTAT)*8) + 2;
[; ;pic16f876a.h: 1073: extern volatile bit RP0 @ (((unsigned) &STATUS)*8) + 5;
[; ;pic16f876a.h: 1074: extern volatile bit RP1 @ (((unsigned) &STATUS)*8) + 6;
[; ;pic16f876a.h: 1075: extern volatile bit RSEN @ (((unsigned) &SSPCON2)*8) + 1;
[; ;pic16f876a.h: 1076: extern volatile bit RX9 @ (((unsigned) &RCSTA)*8) + 6;
[; ;pic16f876a.h: 1077: extern volatile bit RX9D @ (((unsigned) &RCSTA)*8) + 0;
[; ;pic16f876a.h: 1078: extern volatile bit R_W @ (((unsigned) &SSPSTAT)*8) + 2;
[; ;pic16f876a.h: 1079: extern volatile bit R_nW @ (((unsigned) &SSPSTAT)*8) + 2;
[; ;pic16f876a.h: 1080: extern volatile bit SEN @ (((unsigned) &SSPCON2)*8) + 0;
[; ;pic16f876a.h: 1081: extern volatile bit SMP @ (((unsigned) &SSPSTAT)*8) + 7;
[; ;pic16f876a.h: 1082: extern volatile bit SPEN @ (((unsigned) &RCSTA)*8) + 7;
[; ;pic16f876a.h: 1083: extern volatile bit SREN @ (((unsigned) &RCSTA)*8) + 5;
[; ;pic16f876a.h: 1084: extern volatile bit SSPEN @ (((unsigned) &SSPCON)*8) + 5;
[; ;pic16f876a.h: 1085: extern volatile bit SSPIE @ (((unsigned) &PIE1)*8) + 3;
[; ;pic16f876a.h: 1086: extern volatile bit SSPIF @ (((unsigned) &PIR1)*8) + 3;
[; ;pic16f876a.h: 1087: extern volatile bit SSPM0 @ (((unsigned) &SSPCON)*8) + 0;
[; ;pic16f876a.h: 1088: extern volatile bit SSPM1 @ (((unsigned) &SSPCON)*8) + 1;
[; ;pic16f876a.h: 1089: extern volatile bit SSPM2 @ (((unsigned) &SSPCON)*8) + 2;
[; ;pic16f876a.h: 1090: extern volatile bit SSPM3 @ (((unsigned) &SSPCON)*8) + 3;
[; ;pic16f876a.h: 1091: extern volatile bit SSPOV @ (((unsigned) &SSPCON)*8) + 6;
[; ;pic16f876a.h: 1092: extern volatile bit SYNC @ (((unsigned) &TXSTA)*8) + 4;
[; ;pic16f876a.h: 1093: extern volatile bit T0CS @ (((unsigned) &OPTION_REG)*8) + 5;
[; ;pic16f876a.h: 1094: extern volatile bit T0IE @ (((unsigned) &INTCON)*8) + 5;
[; ;pic16f876a.h: 1095: extern volatile bit T0IF @ (((unsigned) &INTCON)*8) + 2;
[; ;pic16f876a.h: 1096: extern volatile bit T0SE @ (((unsigned) &OPTION_REG)*8) + 4;
[; ;pic16f876a.h: 1097: extern volatile bit T1CKPS0 @ (((unsigned) &T1CON)*8) + 4;
[; ;pic16f876a.h: 1098: extern volatile bit T1CKPS1 @ (((unsigned) &T1CON)*8) + 5;
[; ;pic16f876a.h: 1099: extern volatile bit T1INSYNC @ (((unsigned) &T1CON)*8) + 2;
[; ;pic16f876a.h: 1100: extern volatile bit T1OSCEN @ (((unsigned) &T1CON)*8) + 3;
[; ;pic16f876a.h: 1101: extern volatile bit T1SYNC @ (((unsigned) &T1CON)*8) + 2;
[; ;pic16f876a.h: 1102: extern volatile bit T2CKPS0 @ (((unsigned) &T2CON)*8) + 0;
[; ;pic16f876a.h: 1103: extern volatile bit T2CKPS1 @ (((unsigned) &T2CON)*8) + 1;
[; ;pic16f876a.h: 1104: extern volatile bit TMR0IE @ (((unsigned) &INTCON)*8) + 5;
[; ;pic16f876a.h: 1105: extern volatile bit TMR0IF @ (((unsigned) &INTCON)*8) + 2;
[; ;pic16f876a.h: 1106: extern volatile bit TMR1CS @ (((unsigned) &T1CON)*8) + 1;
[; ;pic16f876a.h: 1107: extern volatile bit TMR1IE @ (((unsigned) &PIE1)*8) + 0;
[; ;pic16f876a.h: 1108: extern volatile bit TMR1IF @ (((unsigned) &PIR1)*8) + 0;
[; ;pic16f876a.h: 1109: extern volatile bit TMR1ON @ (((unsigned) &T1CON)*8) + 0;
[; ;pic16f876a.h: 1110: extern volatile bit TMR2IE @ (((unsigned) &PIE1)*8) + 1;
[; ;pic16f876a.h: 1111: extern volatile bit TMR2IF @ (((unsigned) &PIR1)*8) + 1;
[; ;pic16f876a.h: 1112: extern volatile bit TMR2ON @ (((unsigned) &T2CON)*8) + 2;
[; ;pic16f876a.h: 1113: extern volatile bit TOUTPS0 @ (((unsigned) &T2CON)*8) + 3;
[; ;pic16f876a.h: 1114: extern volatile bit TOUTPS1 @ (((unsigned) &T2CON)*8) + 4;
[; ;pic16f876a.h: 1115: extern volatile bit TOUTPS2 @ (((unsigned) &T2CON)*8) + 5;
[; ;pic16f876a.h: 1116: extern volatile bit TOUTPS3 @ (((unsigned) &T2CON)*8) + 6;
[; ;pic16f876a.h: 1117: extern volatile bit TRISA0 @ (((unsigned) &TRISA)*8) + 0;
[; ;pic16f876a.h: 1118: extern volatile bit TRISA1 @ (((unsigned) &TRISA)*8) + 1;
[; ;pic16f876a.h: 1119: extern volatile bit TRISA2 @ (((unsigned) &TRISA)*8) + 2;
[; ;pic16f876a.h: 1120: extern volatile bit TRISA3 @ (((unsigned) &TRISA)*8) + 3;
[; ;pic16f876a.h: 1121: extern volatile bit TRISA4 @ (((unsigned) &TRISA)*8) + 4;
[; ;pic16f876a.h: 1122: extern volatile bit TRISA5 @ (((unsigned) &TRISA)*8) + 5;
[; ;pic16f876a.h: 1123: extern volatile bit TRISB0 @ (((unsigned) &TRISB)*8) + 0;
[; ;pic16f876a.h: 1124: extern volatile bit TRISB1 @ (((unsigned) &TRISB)*8) + 1;
[; ;pic16f876a.h: 1125: extern volatile bit TRISB2 @ (((unsigned) &TRISB)*8) + 2;
[; ;pic16f876a.h: 1126: extern volatile bit TRISB3 @ (((unsigned) &TRISB)*8) + 3;
[; ;pic16f876a.h: 1127: extern volatile bit TRISB4 @ (((unsigned) &TRISB)*8) + 4;
[; ;pic16f876a.h: 1128: extern volatile bit TRISB5 @ (((unsigned) &TRISB)*8) + 5;
[; ;pic16f876a.h: 1129: extern volatile bit TRISB6 @ (((unsigned) &TRISB)*8) + 6;
[; ;pic16f876a.h: 1130: extern volatile bit TRISB7 @ (((unsigned) &TRISB)*8) + 7;
[; ;pic16f876a.h: 1131: extern volatile bit TRISC0 @ (((unsigned) &TRISC)*8) + 0;
[; ;pic16f876a.h: 1132: extern volatile bit TRISC1 @ (((unsigned) &TRISC)*8) + 1;
[; ;pic16f876a.h: 1133: extern volatile bit TRISC2 @ (((unsigned) &TRISC)*8) + 2;
[; ;pic16f876a.h: 1134: extern volatile bit TRISC3 @ (((unsigned) &TRISC)*8) + 3;
[; ;pic16f876a.h: 1135: extern volatile bit TRISC4 @ (((unsigned) &TRISC)*8) + 4;
[; ;pic16f876a.h: 1136: extern volatile bit TRISC5 @ (((unsigned) &TRISC)*8) + 5;
[; ;pic16f876a.h: 1137: extern volatile bit TRISC6 @ (((unsigned) &TRISC)*8) + 6;
[; ;pic16f876a.h: 1138: extern volatile bit TRISC7 @ (((unsigned) &TRISC)*8) + 7;
[; ;pic16f876a.h: 1139: extern volatile bit TRMT @ (((unsigned) &TXSTA)*8) + 1;
[; ;pic16f876a.h: 1140: extern volatile bit TX8_9 @ (((unsigned) &TXSTA)*8) + 6;
[; ;pic16f876a.h: 1141: extern volatile bit TX9 @ (((unsigned) &TXSTA)*8) + 6;
[; ;pic16f876a.h: 1142: extern volatile bit TX9D @ (((unsigned) &TXSTA)*8) + 0;
[; ;pic16f876a.h: 1143: extern volatile bit TXD8 @ (((unsigned) &TXSTA)*8) + 0;
[; ;pic16f876a.h: 1144: extern volatile bit TXEN @ (((unsigned) &TXSTA)*8) + 5;
[; ;pic16f876a.h: 1145: extern volatile bit TXIE @ (((unsigned) &PIE1)*8) + 4;
[; ;pic16f876a.h: 1146: extern volatile bit TXIF @ (((unsigned) &PIR1)*8) + 4;
[; ;pic16f876a.h: 1147: extern volatile bit UA @ (((unsigned) &SSPSTAT)*8) + 1;
[; ;pic16f876a.h: 1148: extern volatile bit WCOL @ (((unsigned) &SSPCON)*8) + 7;
[; ;pic16f876a.h: 1149: extern volatile bit WR @ (((unsigned) &EECON1)*8) + 1;
[; ;pic16f876a.h: 1150: extern volatile bit WREN @ (((unsigned) &EECON1)*8) + 2;
[; ;pic16f876a.h: 1151: extern volatile bit WRERR @ (((unsigned) &EECON1)*8) + 3;
[; ;pic16f876a.h: 1152: extern volatile bit ZERO @ (((unsigned) &STATUS)*8) + 2;
[; ;pic16f876a.h: 1153: extern volatile bit nA @ (((unsigned) &SSPSTAT)*8) + 5;
[; ;pic16f876a.h: 1154: extern volatile bit nADDRESS @ (((unsigned) &SSPSTAT)*8) + 5;
[; ;pic16f876a.h: 1155: extern volatile bit nBO @ (((unsigned) &PCON)*8) + 0;
[; ;pic16f876a.h: 1156: extern volatile bit nBOR @ (((unsigned) &PCON)*8) + 0;
[; ;pic16f876a.h: 1157: extern volatile bit nDONE @ (((unsigned) &ADCON0)*8) + 2;
[; ;pic16f876a.h: 1158: extern volatile bit nPD @ (((unsigned) &STATUS)*8) + 3;
[; ;pic16f876a.h: 1159: extern volatile bit nPOR @ (((unsigned) &PCON)*8) + 1;
[; ;pic16f876a.h: 1160: extern volatile bit nRBPU @ (((unsigned) &OPTION_REG)*8) + 7;
[; ;pic16f876a.h: 1161: extern volatile bit nRC8 @ (((unsigned) &RCSTA)*8) + 6;
[; ;pic16f876a.h: 1162: extern volatile bit nT1SYNC @ (((unsigned) &T1CON)*8) + 2;
[; ;pic16f876a.h: 1163: extern volatile bit nTO @ (((unsigned) &STATUS)*8) + 4;
[; ;pic16f876a.h: 1164: extern volatile bit nTX8 @ (((unsigned) &TXSTA)*8) + 6;
[; ;pic16f876a.h: 1165: extern volatile bit nW @ (((unsigned) &SSPSTAT)*8) + 2;
[; ;pic16f876a.h: 1166: extern volatile bit nWRITE @ (((unsigned) &SSPSTAT)*8) + 2;
[; ;pic.h: 28: extern void _nop(void);
[; ;pic.h: 82: extern unsigned int flash_read(unsigned short addr);
[; ;eeprom_routines.h: 41: extern void eeprom_write(unsigned char addr, unsigned char value);
[; ;eeprom_routines.h: 42: extern unsigned char eeprom_read(unsigned char addr);
[; ;eeprom_routines.h: 43: extern void eecpymem(volatile unsigned char *to, eeprom unsigned char *from, unsigned char size);
[; ;eeprom_routines.h: 44: extern void memcpyee(eeprom unsigned char *to, const unsigned char *from, unsigned char size);
[; ;pic.h: 156: extern void _delay(unsigned long);
[; ;i2c.h: 31: extern void i2c_initialize(void);
[; ;i2c.h: 49: extern unsigned char b_i2c_check_error_flag(void);
[; ;i2c.h: 67: extern unsigned char uc_i2c_read(unsigned char uc_slave_address, unsigned char uc_register);
[; ;i2c.h: 86: extern void uc_i2c_write(unsigned char uc_slave_address, unsigned char uc_register, unsigned char uc_data);
[; ;i2c_rtc.h: 32: extern void i2c_rtc_initialize(void);
[; ;i2c_rtc.h: 49: extern unsigned char uc_i2c_rtc_get_seconds(void);
[; ;i2c_rtc.h: 66: extern void i2c_rtc_set_seconds(unsigned char uc_value);
[; ;i2c_rtc.h: 83: extern unsigned char uc_i2c_rtc_get_minutes(void);
[; ;i2c_rtc.h: 100: extern void i2c_rtc_set_minutes(unsigned char uc_value);
[; ;i2c_rtc.h: 117: extern unsigned char uc_i2c_rtc_get_hours(void);
[; ;i2c_rtc.h: 134: extern void i2c_rtc_set_hours(unsigned char uc_value);
[; ;i2c_rtc.h: 151: extern unsigned char uc_i2c_rtc_get_day(void);
[; ;i2c_rtc.h: 168: extern void i2c_rtc_set_day(unsigned char uc_value);
[; ;i2c_rtc.h: 185: extern unsigned char uc_i2c_rtc_get_date(void);
[; ;i2c_rtc.h: 202: extern void i2c_rtc_set_date(unsigned char uc_value);
[; ;i2c_rtc.h: 219: extern unsigned char uc_i2c_rtc_get_month(void);
[; ;i2c_rtc.h: 236: extern void i2c_rtc_set_month(unsigned char uc_value);
[; ;i2c_rtc.h: 253: extern unsigned char uc_i2c_rtc_get_year(void);
[; ;i2c_rtc.h: 270: extern void i2c_rtc_set_year(unsigned char uc_value);
"20 PR12.c
[; ;PR12.c: 20: asm("\tpsect config,class=CONFIG,delta=2"); asm("\tdw ""0x3F32");
[; <" 	psect config,class=CONFIG,delta=2 ;# ">
[; <" 	dw 0x3F32 ;# ">
"41
[v _step `uc ~T0 1 e ]
[i _step
-> -> 0 `i `uc
]
[; ;PR12.c: 41: unsigned char step=0;
"42
[v _store `uc ~T0 1 e ]
[i _store
-> -> 0 `i `uc
]
[; ;PR12.c: 42: unsigned char store=0;
"43
[v _clksec `uc ~T0 1 e ]
[i _clksec
-> -> 0 `i `uc
]
[; ;PR12.c: 43: unsigned char clksec=0;
"44
[v _clkmin `uc ~T0 1 e ]
[i _clkmin
-> -> 0 `i `uc
]
[; ;PR12.c: 44: unsigned char clkmin=0;
"45
[v _clkhrs `uc ~T0 1 e ]
[i _clkhrs
-> -> 0 `i `uc
]
[; ;PR12.c: 45: unsigned char clkhrs=0;
"46
[v _day `uc ~T0 1 e ]
[i _day
-> -> 0 `i `uc
]
[; ;PR12.c: 46: unsigned char day=0;
"47
[v _date `uc ~T0 1 e ]
[i _date
-> -> 0 `i `uc
]
[; ;PR12.c: 47: unsigned char date=0;
"48
[v _month `uc ~T0 1 e ]
[i _month
-> -> 0 `i `uc
]
[; ;PR12.c: 48: unsigned char month=0;
"49
[v _year `uc ~T0 1 e ]
[i _year
-> -> 0 `i `uc
]
[; ;PR12.c: 49: unsigned char year=0;
"51
[v _secondh `uc ~T0 1 e ]
[i _secondh
-> -> 0 `i `uc
]
[; ;PR12.c: 51: unsigned char secondh=0;
"52
[v _secondl `uc ~T0 1 e ]
[i _secondl
-> -> 0 `i `uc
]
[; ;PR12.c: 52: unsigned char secondl=0;
"53
[v _minutesh `uc ~T0 1 e ]
[i _minutesh
-> -> 0 `i `uc
]
[; ;PR12.c: 53: unsigned char minutesh=0;
"54
[v _minutesl `uc ~T0 1 e ]
[i _minutesl
-> -> 0 `i `uc
]
[; ;PR12.c: 54: unsigned char minutesl=0;
"55
[v _hourh `uc ~T0 1 e ]
[i _hourh
-> -> 0 `i `uc
]
[; ;PR12.c: 55: unsigned char hourh=0;
"56
[v _hourl `uc ~T0 1 e ]
[i _hourl
-> -> 0 `i `uc
]
[; ;PR12.c: 56: unsigned char hourl=0;
"57
[v _dateh `uc ~T0 1 e ]
[i _dateh
-> -> 0 `i `uc
]
[; ;PR12.c: 57: unsigned char dateh=0;
"58
[v _datel `uc ~T0 1 e ]
[i _datel
-> -> 0 `i `uc
]
[; ;PR12.c: 58: unsigned char datel=0;
"59
[v _monthh `uc ~T0 1 e ]
[i _monthh
-> -> 0 `i `uc
]
[; ;PR12.c: 59: unsigned char monthh=0;
"60
[v _monthl `uc ~T0 1 e ]
[i _monthl
-> -> 0 `i `uc
]
[; ;PR12.c: 60: unsigned char monthl=0;
"61
[v _yearh `uc ~T0 1 e ]
[i _yearh
-> -> 0 `i `uc
]
[; ;PR12.c: 61: unsigned char yearh=0;
"62
[v _yearl `uc ~T0 1 e ]
[i _yearl
-> -> 0 `i `uc
]
[; ;PR12.c: 62: unsigned char yearl=0;
[; ;PR12.c: 67: void delay(unsigned long data);
[; ;PR12.c: 68: void send_config(unsigned char data);
[; ;PR12.c: 69: void send_char(unsigned char data);
[; ;PR12.c: 70: void e_pulse(void);
[; ;PR12.c: 71: void lcd_goto(unsigned char data);
[; ;PR12.c: 72: void lcd_clr(void);
[; ;PR12.c: 73: void send_string(const char *s);
[; ;PR12.c: 74: void send_dec(unsigned long data,unsigned char num_dig);
[; ;PR12.c: 75: void writertc(void);
[; ;PR12.c: 76: void readrtc(void);
"82
[v _main `(v ~T0 1 ef ]
{
[; ;PR12.c: 81: void main(void)
[; ;PR12.c: 82: {
[e :U _main ]
[f ]
[; ;PR12.c: 83: i2c_initialize();
"83
[e ( _i2c_initialize ..  ]
[; ;PR12.c: 84: i2c_rtc_initialize();
"84
[e ( _i2c_rtc_initialize ..  ]
"85
[v _i `uc ~T0 1 a ]
[; ;PR12.c: 85: unsigned char i;
[; ;PR12.c: 87: ADCON1 = 0b00000110;
"87
[e = _ADCON1 -> -> 6 `i `uc ]
[; ;PR12.c: 88: TRISA = 0b00000000;
"88
[e = _TRISA -> -> 0 `i `uc ]
[; ;PR12.c: 89: TRISB = 0b00000000;
"89
[e = _TRISB -> -> 0 `i `uc ]
[; ;PR12.c: 90: TRISC = 0b00011111;
"90
[e = _TRISC -> -> 31 `i `uc ]
[; ;PR12.c: 92: RA3=0;
"92
[e = _RA3 -> -> 0 `i `b ]
[; ;PR12.c: 93: RA2=0;
"93
[e = _RA2 -> -> 0 `i `b ]
[; ;PR12.c: 95: send_config(0b00000001);
"95
[e ( _send_config (1 -> -> 1 `i `uc ]
[; ;PR12.c: 96: send_config(0b00000010);
"96
[e ( _send_config (1 -> -> 2 `i `uc ]
[; ;PR12.c: 97: send_config(0b00000110);
"97
[e ( _send_config (1 -> -> 6 `i `uc ]
[; ;PR12.c: 98: send_config(0b00001100);
"98
[e ( _send_config (1 -> -> 12 `i `uc ]
[; ;PR12.c: 99: send_config(0b00111000);
"99
[e ( _send_config (1 -> -> 56 `i `uc ]
[; ;PR12.c: 101: readrtc();
"101
[e ( _readrtc ..  ]
[; ;PR12.c: 102: }
"102
[e :UE 151 ]
}
"108
[v _writertc `(v ~T0 1 ef ]
{
[; ;PR12.c: 107: void writertc(void)
[; ;PR12.c: 108: {
[e :U _writertc ]
[f ]
[; ;PR12.c: 109: RA2=0;
"109
[e = _RA2 -> -> 0 `i `b ]
[; ;PR12.c: 110: RA3=1;
"110
[e = _RA3 -> -> 1 `i `b ]
[; ;PR12.c: 113: while(RC0==0)continue;
"113
[e $U 153  ]
[e :U 154 ]
[e $U 153  ]
[e :U 153 ]
[e $ == -> _RC0 `i -> 0 `i 154  ]
[e :U 155 ]
[; ;PR12.c: 117: while(RC0==1)
"117
[e $U 156  ]
[e :U 157 ]
[; ;PR12.c: 118: {
"118
{
[; ;PR12.c: 119: if(RC1==1)
"119
[e $ ! == -> _RC1 `i -> 1 `i 159  ]
[; ;PR12.c: 120: {
"120
{
[; ;PR12.c: 121: lcd_goto(0);
"121
[e ( _lcd_goto (1 -> -> 0 `i `uc ]
[; ;PR12.c: 122: send_dec(clkhrs,2);
"122
[e ( _send_dec (2 , -> _clkhrs `ul -> -> 2 `i `uc ]
[; ;PR12.c: 123: delay(10000);
"123
[e ( _delay (1 -> -> -> 10000 `i `l `ul ]
[; ;PR12.c: 124: lcd_goto(1);
"124
[e ( _lcd_goto (1 -> -> 1 `i `uc ]
[; ;PR12.c: 125: send_char(' ');
"125
[e ( _send_char (1 -> -> 32 `ui `uc ]
[; ;PR12.c: 126: lcd_goto(0);
"126
[e ( _lcd_goto (1 -> -> 0 `i `uc ]
[; ;PR12.c: 127: send_char(' ');
"127
[e ( _send_char (1 -> -> 32 `ui `uc ]
[; ;PR12.c: 128: delay(10000);
"128
[e ( _delay (1 -> -> -> 10000 `i `l `ul ]
"129
}
[e :U 159 ]
[; ;PR12.c: 129: }
[; ;PR12.c: 130: if(RC1==0)
"130
[e $ ! == -> _RC1 `i -> 0 `i 160  ]
[; ;PR12.c: 131: {
"131
{
[; ;PR12.c: 132: while(RC1==0)continue;
"132
[e $U 161  ]
[e :U 162 ]
[e $U 161  ]
[e :U 161 ]
[e $ == -> _RC1 `i -> 0 `i 162  ]
[e :U 163 ]
[; ;PR12.c: 134: if(clkhrs<=22)clkhrs++;
"134
[e $ ! <= -> _clkhrs `i -> 22 `i 164  ]
[e ++ _clkhrs -> -> 1 `i `uc ]
[e $U 165  ]
"135
[e :U 164 ]
[; ;PR12.c: 135: else clkhrs=0;
[e = _clkhrs -> -> 0 `i `uc ]
[e :U 165 ]
"136
}
[e :U 160 ]
"137
}
[e :U 156 ]
"117
[e $ == -> _RC0 `i -> 1 `i 157  ]
[e :U 158 ]
[; ;PR12.c: 136: }
[; ;PR12.c: 137: }
[; ;PR12.c: 139: lcd_goto(0);
"139
[e ( _lcd_goto (1 -> -> 0 `i `uc ]
[; ;PR12.c: 140: send_dec(clkhrs,2);
"140
[e ( _send_dec (2 , -> _clkhrs `ul -> -> 2 `i `uc ]
[; ;PR12.c: 141: while(RC0==0)continue;
"141
[e $U 166  ]
[e :U 167 ]
[e $U 166  ]
[e :U 166 ]
[e $ == -> _RC0 `i -> 0 `i 167  ]
[e :U 168 ]
[; ;PR12.c: 146: while(RC0==1)
"146
[e $U 169  ]
[e :U 170 ]
[; ;PR12.c: 147: {
"147
{
[; ;PR12.c: 148: if(RC1==1)
"148
[e $ ! == -> _RC1 `i -> 1 `i 172  ]
[; ;PR12.c: 149: {
"149
{
[; ;PR12.c: 150: lcd_goto(3);
"150
[e ( _lcd_goto (1 -> -> 3 `i `uc ]
[; ;PR12.c: 151: send_dec(clkmin,2);
"151
[e ( _send_dec (2 , -> _clkmin `ul -> -> 2 `i `uc ]
[; ;PR12.c: 152: delay(10000);
"152
[e ( _delay (1 -> -> -> 10000 `i `l `ul ]
[; ;PR12.c: 153: lcd_goto(4);
"153
[e ( _lcd_goto (1 -> -> 4 `i `uc ]
[; ;PR12.c: 154: send_char(' ');
"154
[e ( _send_char (1 -> -> 32 `ui `uc ]
[; ;PR12.c: 155: lcd_goto(3);
"155
[e ( _lcd_goto (1 -> -> 3 `i `uc ]
[; ;PR12.c: 156: send_char(' ');
"156
[e ( _send_char (1 -> -> 32 `ui `uc ]
[; ;PR12.c: 157: delay(10000);
"157
[e ( _delay (1 -> -> -> 10000 `i `l `ul ]
"158
}
[e :U 172 ]
[; ;PR12.c: 158: }
[; ;PR12.c: 159: if(RC1==0)
"159
[e $ ! == -> _RC1 `i -> 0 `i 173  ]
[; ;PR12.c: 160: {
"160
{
[; ;PR12.c: 161: while(RC1==0)continue;
"161
[e $U 174  ]
[e :U 175 ]
[e $U 174  ]
[e :U 174 ]
[e $ == -> _RC1 `i -> 0 `i 175  ]
[e :U 176 ]
[; ;PR12.c: 163: if(clkmin<=58) clkmin++;
"163
[e $ ! <= -> _clkmin `i -> 58 `i 177  ]
[e ++ _clkmin -> -> 1 `i `uc ]
[e $U 178  ]
"164
[e :U 177 ]
[; ;PR12.c: 164: else clkmin=0;
[e = _clkmin -> -> 0 `i `uc ]
[e :U 178 ]
"165
}
[e :U 173 ]
"166
}
[e :U 169 ]
"146
[e $ == -> _RC0 `i -> 1 `i 170  ]
[e :U 171 ]
[; ;PR12.c: 165: }
[; ;PR12.c: 166: }
[; ;PR12.c: 168: lcd_goto(3);
"168
[e ( _lcd_goto (1 -> -> 3 `i `uc ]
[; ;PR12.c: 169: send_dec(clkmin,2);
"169
[e ( _send_dec (2 , -> _clkmin `ul -> -> 2 `i `uc ]
[; ;PR12.c: 170: while(RC0==0)continue;
"170
[e $U 179  ]
[e :U 180 ]
[e $U 179  ]
[e :U 179 ]
[e $ == -> _RC0 `i -> 0 `i 180  ]
[e :U 181 ]
[; ;PR12.c: 175: while(RC0==1)
"175
[e $U 182  ]
[e :U 183 ]
[; ;PR12.c: 176: {
"176
{
[; ;PR12.c: 178: if(RC1==1)
"178
[e $ ! == -> _RC1 `i -> 1 `i 185  ]
[; ;PR12.c: 179: {
"179
{
[; ;PR12.c: 180: lcd_goto(6);
"180
[e ( _lcd_goto (1 -> -> 6 `i `uc ]
[; ;PR12.c: 181: send_dec(clksec,2);
"181
[e ( _send_dec (2 , -> _clksec `ul -> -> 2 `i `uc ]
[; ;PR12.c: 182: delay(10000);
"182
[e ( _delay (1 -> -> -> 10000 `i `l `ul ]
[; ;PR12.c: 183: lcd_goto(7);
"183
[e ( _lcd_goto (1 -> -> 7 `i `uc ]
[; ;PR12.c: 184: send_char(' ');
"184
[e ( _send_char (1 -> -> 32 `ui `uc ]
[; ;PR12.c: 185: lcd_goto(6);
"185
[e ( _lcd_goto (1 -> -> 6 `i `uc ]
[; ;PR12.c: 186: send_char(' ');
"186
[e ( _send_char (1 -> -> 32 `ui `uc ]
[; ;PR12.c: 187: delay(10000);
"187
[e ( _delay (1 -> -> -> 10000 `i `l `ul ]
"188
}
[e :U 185 ]
[; ;PR12.c: 188: }
[; ;PR12.c: 189: if(RC1==0)
"189
[e $ ! == -> _RC1 `i -> 0 `i 186  ]
[; ;PR12.c: 190: {
"190
{
[; ;PR12.c: 191: while(RC1==0)continue;
"191
[e $U 187  ]
[e :U 188 ]
[e $U 187  ]
[e :U 187 ]
[e $ == -> _RC1 `i -> 0 `i 188  ]
[e :U 189 ]
[; ;PR12.c: 193: if(clksec<=58) clksec++;
"193
[e $ ! <= -> _clksec `i -> 58 `i 190  ]
[e ++ _clksec -> -> 1 `i `uc ]
[e $U 191  ]
"194
[e :U 190 ]
[; ;PR12.c: 194: else clksec=0;
[e = _clksec -> -> 0 `i `uc ]
[e :U 191 ]
"195
}
[e :U 186 ]
"196
}
[e :U 182 ]
"175
[e $ == -> _RC0 `i -> 1 `i 183  ]
[e :U 184 ]
[; ;PR12.c: 195: }
[; ;PR12.c: 196: }
[; ;PR12.c: 198: lcd_goto(6);
"198
[e ( _lcd_goto (1 -> -> 6 `i `uc ]
[; ;PR12.c: 199: send_dec(clksec,2);
"199
[e ( _send_dec (2 , -> _clksec `ul -> -> 2 `i `uc ]
[; ;PR12.c: 200: while(RC0==0)continue;
"200
[e $U 192  ]
[e :U 193 ]
[e $U 192  ]
[e :U 192 ]
[e $ == -> _RC0 `i -> 0 `i 193  ]
[e :U 194 ]
[; ;PR12.c: 206: while(RC0==1)
"206
[e $U 195  ]
[e :U 196 ]
[; ;PR12.c: 207: {
"207
{
[; ;PR12.c: 209: if(RC1==1)
"209
[e $ ! == -> _RC1 `i -> 1 `i 198  ]
[; ;PR12.c: 210: {
"210
{
[; ;PR12.c: 211: lcd_goto(20);
"211
[e ( _lcd_goto (1 -> -> 20 `i `uc ]
[; ;PR12.c: 212: send_dec(date,2);
"212
[e ( _send_dec (2 , -> _date `ul -> -> 2 `i `uc ]
[; ;PR12.c: 213: delay(10000);
"213
[e ( _delay (1 -> -> -> 10000 `i `l `ul ]
[; ;PR12.c: 214: lcd_goto(21);
"214
[e ( _lcd_goto (1 -> -> 21 `i `uc ]
[; ;PR12.c: 215: send_char(' ');
"215
[e ( _send_char (1 -> -> 32 `ui `uc ]
[; ;PR12.c: 216: lcd_goto(20);
"216
[e ( _lcd_goto (1 -> -> 20 `i `uc ]
[; ;PR12.c: 217: send_char(' ');
"217
[e ( _send_char (1 -> -> 32 `ui `uc ]
[; ;PR12.c: 218: delay(10000);
"218
[e ( _delay (1 -> -> -> 10000 `i `l `ul ]
"219
}
[e :U 198 ]
[; ;PR12.c: 219: }
[; ;PR12.c: 220: if(RC1==0)
"220
[e $ ! == -> _RC1 `i -> 0 `i 199  ]
[; ;PR12.c: 221: {
"221
{
[; ;PR12.c: 222: while(RC1==0)continue;
"222
[e $U 200  ]
[e :U 201 ]
[e $U 200  ]
[e :U 200 ]
[e $ == -> _RC1 `i -> 0 `i 201  ]
[e :U 202 ]
[; ;PR12.c: 224: if(date<=30) date++;
"224
[e $ ! <= -> _date `i -> 30 `i 203  ]
[e ++ _date -> -> 1 `i `uc ]
[e $U 204  ]
"225
[e :U 203 ]
[; ;PR12.c: 225: else date=1;
[e = _date -> -> 1 `i `uc ]
[e :U 204 ]
"226
}
[e :U 199 ]
"227
}
[e :U 195 ]
"206
[e $ == -> _RC0 `i -> 1 `i 196  ]
[e :U 197 ]
[; ;PR12.c: 226: }
[; ;PR12.c: 227: }
[; ;PR12.c: 229: lcd_goto(20);
"229
[e ( _lcd_goto (1 -> -> 20 `i `uc ]
[; ;PR12.c: 230: send_dec(date,2);
"230
[e ( _send_dec (2 , -> _date `ul -> -> 2 `i `uc ]
[; ;PR12.c: 231: while(RC0==0)continue;
"231
[e $U 205  ]
[e :U 206 ]
[e $U 205  ]
[e :U 205 ]
[e $ == -> _RC0 `i -> 0 `i 206  ]
[e :U 207 ]
[; ;PR12.c: 235: while(RC0==1)
"235
[e $U 208  ]
[e :U 209 ]
[; ;PR12.c: 236: {
"236
{
[; ;PR12.c: 238: if(RC1==1)
"238
[e $ ! == -> _RC1 `i -> 1 `i 211  ]
[; ;PR12.c: 239: {
"239
{
[; ;PR12.c: 240: lcd_goto(23);
"240
[e ( _lcd_goto (1 -> -> 23 `i `uc ]
[; ;PR12.c: 241: send_dec(month,2);
"241
[e ( _send_dec (2 , -> _month `ul -> -> 2 `i `uc ]
[; ;PR12.c: 242: delay(10000);
"242
[e ( _delay (1 -> -> -> 10000 `i `l `ul ]
[; ;PR12.c: 243: lcd_goto(24);
"243
[e ( _lcd_goto (1 -> -> 24 `i `uc ]
[; ;PR12.c: 244: send_char(' ');
"244
[e ( _send_char (1 -> -> 32 `ui `uc ]
[; ;PR12.c: 245: lcd_goto(23);
"245
[e ( _lcd_goto (1 -> -> 23 `i `uc ]
[; ;PR12.c: 246: send_char(' ');
"246
[e ( _send_char (1 -> -> 32 `ui `uc ]
[; ;PR12.c: 247: delay(10000);
"247
[e ( _delay (1 -> -> -> 10000 `i `l `ul ]
"248
}
[e :U 211 ]
[; ;PR12.c: 248: }
[; ;PR12.c: 249: if(RC1==0)
"249
[e $ ! == -> _RC1 `i -> 0 `i 212  ]
[; ;PR12.c: 250: {
"250
{
[; ;PR12.c: 251: while(RC1==0)continue;
"251
[e $U 213  ]
[e :U 214 ]
[e $U 213  ]
[e :U 213 ]
[e $ == -> _RC1 `i -> 0 `i 214  ]
[e :U 215 ]
[; ;PR12.c: 253: if(month<=11) month++;
"253
[e $ ! <= -> _month `i -> 11 `i 216  ]
[e ++ _month -> -> 1 `i `uc ]
[e $U 217  ]
"254
[e :U 216 ]
[; ;PR12.c: 254: else month=1;
[e = _month -> -> 1 `i `uc ]
[e :U 217 ]
"255
}
[e :U 212 ]
"256
}
[e :U 208 ]
"235
[e $ == -> _RC0 `i -> 1 `i 209  ]
[e :U 210 ]
[; ;PR12.c: 255: }
[; ;PR12.c: 256: }
[; ;PR12.c: 258: lcd_goto(23);
"258
[e ( _lcd_goto (1 -> -> 23 `i `uc ]
[; ;PR12.c: 259: send_dec(month,2);
"259
[e ( _send_dec (2 , -> _month `ul -> -> 2 `i `uc ]
[; ;PR12.c: 260: while(RC0==0)continue;
"260
[e $U 218  ]
[e :U 219 ]
[e $U 218  ]
[e :U 218 ]
[e $ == -> _RC0 `i -> 0 `i 219  ]
[e :U 220 ]
[; ;PR12.c: 265: while(RC0==1)
"265
[e $U 221  ]
[e :U 222 ]
[; ;PR12.c: 266: {
"266
{
[; ;PR12.c: 268: if(RC1==1)
"268
[e $ ! == -> _RC1 `i -> 1 `i 224  ]
[; ;PR12.c: 269: {
"269
{
[; ;PR12.c: 270: lcd_goto(26);
"270
[e ( _lcd_goto (1 -> -> 26 `i `uc ]
[; ;PR12.c: 271: send_dec(year,2);
"271
[e ( _send_dec (2 , -> _year `ul -> -> 2 `i `uc ]
[; ;PR12.c: 272: delay(10000);
"272
[e ( _delay (1 -> -> -> 10000 `i `l `ul ]
[; ;PR12.c: 273: lcd_goto(27);
"273
[e ( _lcd_goto (1 -> -> 27 `i `uc ]
[; ;PR12.c: 274: send_char(' ');
"274
[e ( _send_char (1 -> -> 32 `ui `uc ]
[; ;PR12.c: 275: lcd_goto(26);
"275
[e ( _lcd_goto (1 -> -> 26 `i `uc ]
[; ;PR12.c: 276: send_char(' ');
"276
[e ( _send_char (1 -> -> 32 `ui `uc ]
[; ;PR12.c: 277: delay(10000);
"277
[e ( _delay (1 -> -> -> 10000 `i `l `ul ]
"278
}
[e :U 224 ]
[; ;PR12.c: 278: }
[; ;PR12.c: 279: if(RC1==0)
"279
[e $ ! == -> _RC1 `i -> 0 `i 225  ]
[; ;PR12.c: 280: {
"280
{
[; ;PR12.c: 281: while(RC1==0)continue;
"281
[e $U 226  ]
[e :U 227 ]
[e $U 226  ]
[e :U 226 ]
[e $ == -> _RC1 `i -> 0 `i 227  ]
[e :U 228 ]
[; ;PR12.c: 283: if(year<=99) year++;
"283
[e $ ! <= -> _year `i -> 99 `i 229  ]
[e ++ _year -> -> 1 `i `uc ]
[e $U 230  ]
"284
[e :U 229 ]
[; ;PR12.c: 284: else year=0;
[e = _year -> -> 0 `i `uc ]
[e :U 230 ]
"285
}
[e :U 225 ]
"286
}
[e :U 221 ]
"265
[e $ == -> _RC0 `i -> 1 `i 222  ]
[e :U 223 ]
[; ;PR12.c: 285: }
[; ;PR12.c: 286: }
[; ;PR12.c: 288: lcd_goto(26);
"288
[e ( _lcd_goto (1 -> -> 26 `i `uc ]
[; ;PR12.c: 289: send_dec(year,2);
"289
[e ( _send_dec (2 , -> _year `ul -> -> 2 `i `uc ]
[; ;PR12.c: 290: while(RC0==0)continue;
"290
[e $U 231  ]
[e :U 232 ]
[e $U 231  ]
[e :U 231 ]
[e $ == -> _RC0 `i -> 0 `i 232  ]
[e :U 233 ]
[; ;PR12.c: 295: while(RC0==1)
"295
[e $U 234  ]
[e :U 235 ]
[; ;PR12.c: 296: {
"296
{
[; ;PR12.c: 297: if(RC1==1)
"297
[e $ ! == -> _RC1 `i -> 1 `i 237  ]
[; ;PR12.c: 298: {
"298
{
[; ;PR12.c: 299: if(day==7)
"299
[e $ ! == -> _day `i -> 7 `i 238  ]
[; ;PR12.c: 300: {
"300
{
[; ;PR12.c: 301: lcd_goto(31);
"301
[e ( _lcd_goto (1 -> -> 31 `i `uc ]
[; ;PR12.c: 302: send_string("SUN");
"302
[e ( _send_string (1 :s 1C ]
[; ;PR12.c: 303: delay(10000);
"303
[e ( _delay (1 -> -> -> 10000 `i `l `ul ]
[; ;PR12.c: 304: lcd_goto(31);
"304
[e ( _lcd_goto (1 -> -> 31 `i `uc ]
[; ;PR12.c: 305: send_char(' ');
"305
[e ( _send_char (1 -> -> 32 `ui `uc ]
[; ;PR12.c: 306: send_char(' ');
"306
[e ( _send_char (1 -> -> 32 `ui `uc ]
[; ;PR12.c: 307: send_char(' ');
"307
[e ( _send_char (1 -> -> 32 `ui `uc ]
[; ;PR12.c: 308: delay(10000);
"308
[e ( _delay (1 -> -> -> 10000 `i `l `ul ]
"309
}
[; ;PR12.c: 309: }
[e $U 239  ]
"310
[e :U 238 ]
[; ;PR12.c: 310: else if(day==1)
[e $ ! == -> _day `i -> 1 `i 240  ]
[; ;PR12.c: 311: {
"311
{
[; ;PR12.c: 312: lcd_goto(31);
"312
[e ( _lcd_goto (1 -> -> 31 `i `uc ]
[; ;PR12.c: 313: send_string("MON");
"313
[e ( _send_string (1 :s 2C ]
[; ;PR12.c: 314: delay(10000);
"314
[e ( _delay (1 -> -> -> 10000 `i `l `ul ]
[; ;PR12.c: 315: lcd_goto(31);
"315
[e ( _lcd_goto (1 -> -> 31 `i `uc ]
[; ;PR12.c: 316: send_char(' ');
"316
[e ( _send_char (1 -> -> 32 `ui `uc ]
[; ;PR12.c: 317: send_char(' ');
"317
[e ( _send_char (1 -> -> 32 `ui `uc ]
[; ;PR12.c: 318: send_char(' ');
"318
[e ( _send_char (1 -> -> 32 `ui `uc ]
[; ;PR12.c: 319: delay(10000);
"319
[e ( _delay (1 -> -> -> 10000 `i `l `ul ]
"320
}
[; ;PR12.c: 320: }
[e $U 241  ]
"321
[e :U 240 ]
[; ;PR12.c: 321: else if(day==2)
[e $ ! == -> _day `i -> 2 `i 242  ]
[; ;PR12.c: 322: {
"322
{
[; ;PR12.c: 323: lcd_goto(31);
"323
[e ( _lcd_goto (1 -> -> 31 `i `uc ]
[; ;PR12.c: 324: send_string("TUE");
"324
[e ( _send_string (1 :s 3C ]
[; ;PR12.c: 325: delay(10000);
"325
[e ( _delay (1 -> -> -> 10000 `i `l `ul ]
[; ;PR12.c: 326: lcd_goto(31);
"326
[e ( _lcd_goto (1 -> -> 31 `i `uc ]
[; ;PR12.c: 327: send_char(' ');
"327
[e ( _send_char (1 -> -> 32 `ui `uc ]
[; ;PR12.c: 328: send_char(' ');
"328
[e ( _send_char (1 -> -> 32 `ui `uc ]
[; ;PR12.c: 329: send_char(' ');
"329
[e ( _send_char (1 -> -> 32 `ui `uc ]
[; ;PR12.c: 330: delay(10000);
"330
[e ( _delay (1 -> -> -> 10000 `i `l `ul ]
"331
}
[; ;PR12.c: 331: }
[e $U 243  ]
"332
[e :U 242 ]
[; ;PR12.c: 332: else if(day==3)
[e $ ! == -> _day `i -> 3 `i 244  ]
[; ;PR12.c: 333: {
"333
{
[; ;PR12.c: 334: lcd_goto(31);
"334
[e ( _lcd_goto (1 -> -> 31 `i `uc ]
[; ;PR12.c: 335: send_string("WED");
"335
[e ( _send_string (1 :s 4C ]
[; ;PR12.c: 336: delay(10000);
"336
[e ( _delay (1 -> -> -> 10000 `i `l `ul ]
[; ;PR12.c: 337: lcd_goto(31);
"337
[e ( _lcd_goto (1 -> -> 31 `i `uc ]
[; ;PR12.c: 338: send_char(' ');
"338
[e ( _send_char (1 -> -> 32 `ui `uc ]
[; ;PR12.c: 339: send_char(' ');
"339
[e ( _send_char (1 -> -> 32 `ui `uc ]
[; ;PR12.c: 340: send_char(' ');
"340
[e ( _send_char (1 -> -> 32 `ui `uc ]
[; ;PR12.c: 341: delay(10000);
"341
[e ( _delay (1 -> -> -> 10000 `i `l `ul ]
"342
}
[; ;PR12.c: 342: }
[e $U 245  ]
"343
[e :U 244 ]
[; ;PR12.c: 343: else if(day==4)
[e $ ! == -> _day `i -> 4 `i 246  ]
[; ;PR12.c: 344: {
"344
{
[; ;PR12.c: 345: lcd_goto(31);
"345
[e ( _lcd_goto (1 -> -> 31 `i `uc ]
[; ;PR12.c: 346: send_string("THU");
"346
[e ( _send_string (1 :s 5C ]
[; ;PR12.c: 347: delay(10000);
"347
[e ( _delay (1 -> -> -> 10000 `i `l `ul ]
[; ;PR12.c: 348: lcd_goto(31);
"348
[e ( _lcd_goto (1 -> -> 31 `i `uc ]
[; ;PR12.c: 349: send_char(' ');
"349
[e ( _send_char (1 -> -> 32 `ui `uc ]
[; ;PR12.c: 350: send_char(' ');
"350
[e ( _send_char (1 -> -> 32 `ui `uc ]
[; ;PR12.c: 351: send_char(' ');
"351
[e ( _send_char (1 -> -> 32 `ui `uc ]
[; ;PR12.c: 352: delay(10000);
"352
[e ( _delay (1 -> -> -> 10000 `i `l `ul ]
"353
}
[; ;PR12.c: 353: }
[e $U 247  ]
"354
[e :U 246 ]
[; ;PR12.c: 354: else if(day==5)
[e $ ! == -> _day `i -> 5 `i 248  ]
[; ;PR12.c: 355: {
"355
{
[; ;PR12.c: 356: lcd_goto(31);
"356
[e ( _lcd_goto (1 -> -> 31 `i `uc ]
[; ;PR12.c: 357: send_string("FRI");
"357
[e ( _send_string (1 :s 6C ]
[; ;PR12.c: 358: delay(10000);
"358
[e ( _delay (1 -> -> -> 10000 `i `l `ul ]
[; ;PR12.c: 359: lcd_goto(31);
"359
[e ( _lcd_goto (1 -> -> 31 `i `uc ]
[; ;PR12.c: 360: send_char(' ');
"360
[e ( _send_char (1 -> -> 32 `ui `uc ]
[; ;PR12.c: 361: send_char(' ');
"361
[e ( _send_char (1 -> -> 32 `ui `uc ]
[; ;PR12.c: 362: send_char(' ');
"362
[e ( _send_char (1 -> -> 32 `ui `uc ]
[; ;PR12.c: 363: delay(10000);
"363
[e ( _delay (1 -> -> -> 10000 `i `l `ul ]
"364
}
[; ;PR12.c: 364: }
[e $U 249  ]
"365
[e :U 248 ]
[; ;PR12.c: 365: else if(day==6)
[e $ ! == -> _day `i -> 6 `i 250  ]
[; ;PR12.c: 366: {
"366
{
[; ;PR12.c: 367: lcd_goto(31);
"367
[e ( _lcd_goto (1 -> -> 31 `i `uc ]
[; ;PR12.c: 368: send_string("SAT");
"368
[e ( _send_string (1 :s 7C ]
[; ;PR12.c: 369: delay(10000);
"369
[e ( _delay (1 -> -> -> 10000 `i `l `ul ]
[; ;PR12.c: 370: lcd_goto(31);
"370
[e ( _lcd_goto (1 -> -> 31 `i `uc ]
[; ;PR12.c: 371: send_char(' ');
"371
[e ( _send_char (1 -> -> 32 `ui `uc ]
[; ;PR12.c: 372: send_char(' ');
"372
[e ( _send_char (1 -> -> 32 `ui `uc ]
[; ;PR12.c: 373: send_char(' ');
"373
[e ( _send_char (1 -> -> 32 `ui `uc ]
[; ;PR12.c: 374: delay(10000);
"374
[e ( _delay (1 -> -> -> 10000 `i `l `ul ]
"375
}
[e :U 250 ]
"376
[e :U 249 ]
[e :U 247 ]
[e :U 245 ]
[e :U 243 ]
[e :U 241 ]
[e :U 239 ]
}
[; ;PR12.c: 375: }
[; ;PR12.c: 376: }
[e $U 251  ]
"377
[e :U 237 ]
[; ;PR12.c: 377: else
[; ;PR12.c: 378: {
"378
{
[; ;PR12.c: 379: while(RC1==0)continue;
"379
[e $U 252  ]
[e :U 253 ]
[e $U 252  ]
[e :U 252 ]
[e $ == -> _RC1 `i -> 0 `i 253  ]
[e :U 254 ]
[; ;PR12.c: 380: if(day>6)
"380
[e $ ! > -> _day `i -> 6 `i 255  ]
[; ;PR12.c: 381: {
"381
{
[; ;PR12.c: 382: day=1;
"382
[e = _day -> -> 1 `i `uc ]
"383
}
[; ;PR12.c: 383: }
[e $U 256  ]
"384
[e :U 255 ]
[; ;PR12.c: 384: else
[; ;PR12.c: 385: {
"385
{
[; ;PR12.c: 386: day+=1;
"386
[e =+ _day -> -> 1 `i `uc ]
"387
}
[e :U 256 ]
"388
}
[e :U 251 ]
"389
}
[e :U 234 ]
"295
[e $ == -> _RC0 `i -> 1 `i 235  ]
[e :U 236 ]
[; ;PR12.c: 387: }
[; ;PR12.c: 388: }
[; ;PR12.c: 389: }
[; ;PR12.c: 390: if(RC1==0)
"390
[e $ ! == -> _RC1 `i -> 0 `i 257  ]
[; ;PR12.c: 391: {
"391
{
[; ;PR12.c: 392: if(day==7)
"392
[e $ ! == -> _day `i -> 7 `i 258  ]
[; ;PR12.c: 393: {
"393
{
[; ;PR12.c: 394: lcd_goto(31);
"394
[e ( _lcd_goto (1 -> -> 31 `i `uc ]
[; ;PR12.c: 395: send_string("SUN");
"395
[e ( _send_string (1 :s 8C ]
[; ;PR12.c: 396: delay(10000);
"396
[e ( _delay (1 -> -> -> 10000 `i `l `ul ]
[; ;PR12.c: 397: lcd_goto(31);
"397
[e ( _lcd_goto (1 -> -> 31 `i `uc ]
[; ;PR12.c: 398: send_char(' ');
"398
[e ( _send_char (1 -> -> 32 `ui `uc ]
[; ;PR12.c: 399: send_char(' ');
"399
[e ( _send_char (1 -> -> 32 `ui `uc ]
[; ;PR12.c: 400: send_char(' ');
"400
[e ( _send_char (1 -> -> 32 `ui `uc ]
[; ;PR12.c: 401: delay(10000);
"401
[e ( _delay (1 -> -> -> 10000 `i `l `ul ]
"402
}
[; ;PR12.c: 402: }
[e $U 259  ]
"403
[e :U 258 ]
[; ;PR12.c: 403: else if(day==1)
[e $ ! == -> _day `i -> 1 `i 260  ]
[; ;PR12.c: 404: {
"404
{
[; ;PR12.c: 405: lcd_goto(31);
"405
[e ( _lcd_goto (1 -> -> 31 `i `uc ]
[; ;PR12.c: 406: send_string("MON");
"406
[e ( _send_string (1 :s 9C ]
[; ;PR12.c: 407: delay(10000);
"407
[e ( _delay (1 -> -> -> 10000 `i `l `ul ]
[; ;PR12.c: 408: lcd_goto(31);
"408
[e ( _lcd_goto (1 -> -> 31 `i `uc ]
[; ;PR12.c: 409: send_char(' ');
"409
[e ( _send_char (1 -> -> 32 `ui `uc ]
[; ;PR12.c: 410: send_char(' ');
"410
[e ( _send_char (1 -> -> 32 `ui `uc ]
[; ;PR12.c: 411: send_char(' ');
"411
[e ( _send_char (1 -> -> 32 `ui `uc ]
[; ;PR12.c: 412: delay(10000);
"412
[e ( _delay (1 -> -> -> 10000 `i `l `ul ]
"413
}
[; ;PR12.c: 413: }
[e $U 261  ]
"414
[e :U 260 ]
[; ;PR12.c: 414: else if(day==2)
[e $ ! == -> _day `i -> 2 `i 262  ]
[; ;PR12.c: 415: {
"415
{
[; ;PR12.c: 416: lcd_goto(31);
"416
[e ( _lcd_goto (1 -> -> 31 `i `uc ]
[; ;PR12.c: 417: send_string("TUE");
"417
[e ( _send_string (1 :s 10C ]
[; ;PR12.c: 418: delay(10000);
"418
[e ( _delay (1 -> -> -> 10000 `i `l `ul ]
[; ;PR12.c: 419: lcd_goto(31);
"419
[e ( _lcd_goto (1 -> -> 31 `i `uc ]
[; ;PR12.c: 420: send_char(' ');
"420
[e ( _send_char (1 -> -> 32 `ui `uc ]
[; ;PR12.c: 421: send_char(' ');
"421
[e ( _send_char (1 -> -> 32 `ui `uc ]
[; ;PR12.c: 422: send_char(' ');
"422
[e ( _send_char (1 -> -> 32 `ui `uc ]
[; ;PR12.c: 423: delay(10000);
"423
[e ( _delay (1 -> -> -> 10000 `i `l `ul ]
"424
}
[; ;PR12.c: 424: }
[e $U 263  ]
"425
[e :U 262 ]
[; ;PR12.c: 425: else if(day==3)
[e $ ! == -> _day `i -> 3 `i 264  ]
[; ;PR12.c: 426: {
"426
{
[; ;PR12.c: 427: lcd_goto(31);
"427
[e ( _lcd_goto (1 -> -> 31 `i `uc ]
[; ;PR12.c: 428: send_string("WED");
"428
[e ( _send_string (1 :s 11C ]
"429
}
[; ;PR12.c: 429: }
[e $U 265  ]
"430
[e :U 264 ]
[; ;PR12.c: 430: else if(day==4)
[e $ ! == -> _day `i -> 4 `i 266  ]
[; ;PR12.c: 431: {
"431
{
[; ;PR12.c: 432: lcd_goto(31);
"432
[e ( _lcd_goto (1 -> -> 31 `i `uc ]
[; ;PR12.c: 433: send_string("THU");
"433
[e ( _send_string (1 :s 12C ]
[; ;PR12.c: 434: delay(10000);
"434
[e ( _delay (1 -> -> -> 10000 `i `l `ul ]
[; ;PR12.c: 435: lcd_goto(31);
"435
[e ( _lcd_goto (1 -> -> 31 `i `uc ]
[; ;PR12.c: 436: send_char(' ');
"436
[e ( _send_char (1 -> -> 32 `ui `uc ]
[; ;PR12.c: 437: send_char(' ');
"437
[e ( _send_char (1 -> -> 32 `ui `uc ]
[; ;PR12.c: 438: send_char(' ');
"438
[e ( _send_char (1 -> -> 32 `ui `uc ]
[; ;PR12.c: 439: delay(10000);
"439
[e ( _delay (1 -> -> -> 10000 `i `l `ul ]
"440
}
[; ;PR12.c: 440: }
[e $U 267  ]
"441
[e :U 266 ]
[; ;PR12.c: 441: else if(day==5)
[e $ ! == -> _day `i -> 5 `i 268  ]
[; ;PR12.c: 442: {
"442
{
[; ;PR12.c: 443: lcd_goto(31);
"443
[e ( _lcd_goto (1 -> -> 31 `i `uc ]
[; ;PR12.c: 444: send_string("FRI");
"444
[e ( _send_string (1 :s 13C ]
[; ;PR12.c: 445: delay(10000);
"445
[e ( _delay (1 -> -> -> 10000 `i `l `ul ]
[; ;PR12.c: 446: lcd_goto(31);
"446
[e ( _lcd_goto (1 -> -> 31 `i `uc ]
[; ;PR12.c: 447: send_char(' ');
"447
[e ( _send_char (1 -> -> 32 `ui `uc ]
[; ;PR12.c: 448: send_char(' ');
"448
[e ( _send_char (1 -> -> 32 `ui `uc ]
[; ;PR12.c: 449: send_char(' ');
"449
[e ( _send_char (1 -> -> 32 `ui `uc ]
[; ;PR12.c: 450: delay(10000);
"450
[e ( _delay (1 -> -> -> 10000 `i `l `ul ]
"451
}
[; ;PR12.c: 451: }
[e $U 269  ]
"452
[e :U 268 ]
[; ;PR12.c: 452: else if(day==6)
[e $ ! == -> _day `i -> 6 `i 270  ]
[; ;PR12.c: 453: {
"453
{
[; ;PR12.c: 454: lcd_goto(31);
"454
[e ( _lcd_goto (1 -> -> 31 `i `uc ]
[; ;PR12.c: 455: send_string("SAT");
"455
[e ( _send_string (1 :s 14C ]
[; ;PR12.c: 456: delay(10000);
"456
[e ( _delay (1 -> -> -> 10000 `i `l `ul ]
[; ;PR12.c: 457: lcd_goto(31);
"457
[e ( _lcd_goto (1 -> -> 31 `i `uc ]
[; ;PR12.c: 458: send_char(' ');
"458
[e ( _send_char (1 -> -> 32 `ui `uc ]
[; ;PR12.c: 459: send_char(' ');
"459
[e ( _send_char (1 -> -> 32 `ui `uc ]
[; ;PR12.c: 460: send_char(' ');
"460
[e ( _send_char (1 -> -> 32 `ui `uc ]
[; ;PR12.c: 461: delay(10000);
"461
[e ( _delay (1 -> -> -> 10000 `i `l `ul ]
"462
}
[e :U 270 ]
"463
[e :U 269 ]
[e :U 267 ]
[e :U 265 ]
[e :U 263 ]
[e :U 261 ]
[e :U 259 ]
}
[e :U 257 ]
[; ;PR12.c: 462: }
[; ;PR12.c: 463: }
[; ;PR12.c: 464: while(RC0==0)continue;
"464
[e $U 271  ]
[e :U 272 ]
[e $U 271  ]
[e :U 271 ]
[e $ == -> _RC0 `i -> 0 `i 272  ]
[e :U 273 ]
[; ;PR12.c: 466: i2c_rtc_set_seconds(clksec);
"466
[e ( _i2c_rtc_set_seconds (1 _clksec ]
[; ;PR12.c: 467: i2c_rtc_set_minutes(clkmin);
"467
[e ( _i2c_rtc_set_minutes (1 _clkmin ]
[; ;PR12.c: 468: i2c_rtc_set_hours(clkhrs);
"468
[e ( _i2c_rtc_set_hours (1 _clkhrs ]
[; ;PR12.c: 469: i2c_rtc_set_day(day);
"469
[e ( _i2c_rtc_set_day (1 _day ]
[; ;PR12.c: 470: i2c_rtc_set_date(date);
"470
[e ( _i2c_rtc_set_date (1 _date ]
[; ;PR12.c: 471: i2c_rtc_set_month(month);
"471
[e ( _i2c_rtc_set_month (1 _month ]
[; ;PR12.c: 472: i2c_rtc_set_year(year);
"472
[e ( _i2c_rtc_set_year (1 _year ]
[; ;PR12.c: 474: }
"474
[e :UE 152 ]
}
"481
[v _readrtc `(v ~T0 1 ef ]
{
[; ;PR12.c: 480: void readrtc(void)
[; ;PR12.c: 481: {
[e :U _readrtc ]
[f ]
[; ;PR12.c: 482: while(1)
"482
[e :U 276 ]
[; ;PR12.c: 483: {
"483
{
[; ;PR12.c: 484: RA2=1;
"484
[e = _RA2 -> -> 1 `i `b ]
[; ;PR12.c: 485: RA3=0;
"485
[e = _RA3 -> -> 0 `i `b ]
[; ;PR12.c: 486: if(RC0==0)
"486
[e $ ! == -> _RC0 `i -> 0 `i 278  ]
[; ;PR12.c: 487: {
"487
{
[; ;PR12.c: 488: writertc();
"488
[e ( _writertc ..  ]
"489
}
[; ;PR12.c: 489: }
[e $U 279  ]
"490
[e :U 278 ]
[; ;PR12.c: 490: else
[; ;PR12.c: 491: {
"491
{
[; ;PR12.c: 492: clksec=uc_i2c_rtc_get_seconds();
"492
[e = _clksec ( _uc_i2c_rtc_get_seconds ..  ]
[; ;PR12.c: 493: clkmin= uc_i2c_rtc_get_minutes();
"493
[e = _clkmin ( _uc_i2c_rtc_get_minutes ..  ]
[; ;PR12.c: 494: clkhrs=uc_i2c_rtc_get_hours();
"494
[e = _clkhrs ( _uc_i2c_rtc_get_hours ..  ]
[; ;PR12.c: 495: day=uc_i2c_rtc_get_day();
"495
[e = _day ( _uc_i2c_rtc_get_day ..  ]
[; ;PR12.c: 496: date=uc_i2c_rtc_get_date();
"496
[e = _date ( _uc_i2c_rtc_get_date ..  ]
[; ;PR12.c: 497: month=uc_i2c_rtc_get_month();
"497
[e = _month ( _uc_i2c_rtc_get_month ..  ]
[; ;PR12.c: 498: year=uc_i2c_rtc_get_year();
"498
[e = _year ( _uc_i2c_rtc_get_year ..  ]
[; ;PR12.c: 500: lcd_goto(0);
"500
[e ( _lcd_goto (1 -> -> 0 `i `uc ]
[; ;PR12.c: 501: send_dec(clkhrs,2);
"501
[e ( _send_dec (2 , -> _clkhrs `ul -> -> 2 `i `uc ]
[; ;PR12.c: 503: lcd_goto(2);
"503
[e ( _lcd_goto (1 -> -> 2 `i `uc ]
[; ;PR12.c: 504: send_char(0x3A);
"504
[e ( _send_char (1 -> -> 58 `i `uc ]
[; ;PR12.c: 506: lcd_goto(3);
"506
[e ( _lcd_goto (1 -> -> 3 `i `uc ]
[; ;PR12.c: 507: send_dec(clkmin,2);
"507
[e ( _send_dec (2 , -> _clkmin `ul -> -> 2 `i `uc ]
[; ;PR12.c: 509: lcd_goto(5);
"509
[e ( _lcd_goto (1 -> -> 5 `i `uc ]
[; ;PR12.c: 510: send_char(0x3A);
"510
[e ( _send_char (1 -> -> 58 `i `uc ]
[; ;PR12.c: 512: lcd_goto(6);
"512
[e ( _lcd_goto (1 -> -> 6 `i `uc ]
[; ;PR12.c: 513: send_dec(clksec,2);
"513
[e ( _send_dec (2 , -> _clksec `ul -> -> 2 `i `uc ]
[; ;PR12.c: 515: if(day==7)
"515
[e $ ! == -> _day `i -> 7 `i 280  ]
[; ;PR12.c: 516: {
"516
{
[; ;PR12.c: 517: lcd_goto(31);
"517
[e ( _lcd_goto (1 -> -> 31 `i `uc ]
[; ;PR12.c: 518: send_string("SUN");
"518
[e ( _send_string (1 :s 15C ]
"519
}
[; ;PR12.c: 519: }
[e $U 281  ]
"520
[e :U 280 ]
[; ;PR12.c: 520: else if(day==1)
[e $ ! == -> _day `i -> 1 `i 282  ]
[; ;PR12.c: 521: {
"521
{
[; ;PR12.c: 522: lcd_goto(31);
"522
[e ( _lcd_goto (1 -> -> 31 `i `uc ]
[; ;PR12.c: 523: send_string("MON");
"523
[e ( _send_string (1 :s 16C ]
"524
}
[; ;PR12.c: 524: }
[e $U 283  ]
"525
[e :U 282 ]
[; ;PR12.c: 525: else if(day==2)
[e $ ! == -> _day `i -> 2 `i 284  ]
[; ;PR12.c: 526: {
"526
{
[; ;PR12.c: 527: lcd_goto(31);
"527
[e ( _lcd_goto (1 -> -> 31 `i `uc ]
[; ;PR12.c: 528: send_string("TUE");
"528
[e ( _send_string (1 :s 17C ]
"529
}
[; ;PR12.c: 529: }
[e $U 285  ]
"530
[e :U 284 ]
[; ;PR12.c: 530: else if(day==3)
[e $ ! == -> _day `i -> 3 `i 286  ]
[; ;PR12.c: 531: {
"531
{
[; ;PR12.c: 532: lcd_goto(31);
"532
[e ( _lcd_goto (1 -> -> 31 `i `uc ]
[; ;PR12.c: 533: send_string("WED");
"533
[e ( _send_string (1 :s 18C ]
"534
}
[; ;PR12.c: 534: }
[e $U 287  ]
"535
[e :U 286 ]
[; ;PR12.c: 535: else if(day==4)
[e $ ! == -> _day `i -> 4 `i 288  ]
[; ;PR12.c: 536: {
"536
{
[; ;PR12.c: 537: lcd_goto(31);
"537
[e ( _lcd_goto (1 -> -> 31 `i `uc ]
[; ;PR12.c: 538: send_string("THU");
"538
[e ( _send_string (1 :s 19C ]
"539
}
[; ;PR12.c: 539: }
[e $U 289  ]
"540
[e :U 288 ]
[; ;PR12.c: 540: else if(day==5)
[e $ ! == -> _day `i -> 5 `i 290  ]
[; ;PR12.c: 541: {
"541
{
[; ;PR12.c: 542: lcd_goto(31);
"542
[e ( _lcd_goto (1 -> -> 31 `i `uc ]
[; ;PR12.c: 543: send_string("FRI");
"543
[e ( _send_string (1 :s 20C ]
"544
}
[; ;PR12.c: 544: }
[e $U 291  ]
"545
[e :U 290 ]
[; ;PR12.c: 545: else if(day==6)
[e $ ! == -> _day `i -> 6 `i 292  ]
[; ;PR12.c: 546: {
"546
{
[; ;PR12.c: 547: lcd_goto(31);
"547
[e ( _lcd_goto (1 -> -> 31 `i `uc ]
[; ;PR12.c: 548: send_string("SAT");
"548
[e ( _send_string (1 :s 21C ]
"549
}
[e :U 292 ]
"551
[e :U 291 ]
[e :U 289 ]
[e :U 287 ]
[e :U 285 ]
[e :U 283 ]
[e :U 281 ]
[; ;PR12.c: 549: }
[; ;PR12.c: 551: lcd_goto(20);
[e ( _lcd_goto (1 -> -> 20 `i `uc ]
[; ;PR12.c: 552: send_dec(date,2);
"552
[e ( _send_dec (2 , -> _date `ul -> -> 2 `i `uc ]
[; ;PR12.c: 554: lcd_goto(22);
"554
[e ( _lcd_goto (1 -> -> 22 `i `uc ]
[; ;PR12.c: 555: send_char(0x2F);
"555
[e ( _send_char (1 -> -> 47 `i `uc ]
[; ;PR12.c: 558: lcd_goto(23);
"558
[e ( _lcd_goto (1 -> -> 23 `i `uc ]
[; ;PR12.c: 559: send_dec(month,2);
"559
[e ( _send_dec (2 , -> _month `ul -> -> 2 `i `uc ]
[; ;PR12.c: 561: lcd_goto(25);
"561
[e ( _lcd_goto (1 -> -> 25 `i `uc ]
[; ;PR12.c: 562: send_char(0x2F);
"562
[e ( _send_char (1 -> -> 47 `i `uc ]
[; ;PR12.c: 564: lcd_goto(26);
"564
[e ( _lcd_goto (1 -> -> 26 `i `uc ]
[; ;PR12.c: 565: send_dec(year,2);
"565
[e ( _send_dec (2 , -> _year `ul -> -> 2 `i `uc ]
"567
}
[e :U 279 ]
"568
}
[e :U 275 ]
"482
[e $U 276  ]
[e :U 277 ]
[; ;PR12.c: 567: }
[; ;PR12.c: 568: }
[; ;PR12.c: 569: }
"569
[e :UE 274 ]
}
"575
[v _delay `(v ~T0 1 ef1`ul ]
{
[; ;PR12.c: 574: void delay(unsigned long data)
[; ;PR12.c: 575: {
[e :U _delay ]
[v _data `ul ~T0 1 r1 ]
[f ]
[; ;PR12.c: 576: for( ;data>0;data-=1);
"576
{
[e $ > _data -> -> -> 0 `i `l `ul 294  ]
[e $U 295  ]
[e :U 294 ]
[e =- _data -> -> -> 1 `i `l `ul ]
[e $ > _data -> -> -> 0 `i `l `ul 294  ]
[e :U 295 ]
}
[; ;PR12.c: 577: }
"577
[e :UE 293 ]
}
"579
[v _send_config `(v ~T0 1 ef1`uc ]
{
[; ;PR12.c: 578: void send_config(unsigned char data)
[; ;PR12.c: 579: {
[e :U _send_config ]
[v _data `uc ~T0 1 r1 ]
[f ]
[; ;PR12.c: 580: RA0=0;
"580
[e = _RA0 -> -> 0 `i `b ]
[; ;PR12.c: 581: PORTB=data;
"581
[e = _PORTB _data ]
[; ;PR12.c: 582: delay(300);
"582
[e ( _delay (1 -> -> -> 300 `i `l `ul ]
[; ;PR12.c: 583: e_pulse();
"583
[e ( _e_pulse ..  ]
[; ;PR12.c: 584: }
"584
[e :UE 297 ]
}
"586
[v _send_char `(v ~T0 1 ef1`uc ]
{
[; ;PR12.c: 585: void send_char(unsigned char data)
[; ;PR12.c: 586: {
[e :U _send_char ]
[v _data `uc ~T0 1 r1 ]
[f ]
[; ;PR12.c: 587: RA0=1;
"587
[e = _RA0 -> -> 1 `i `b ]
[; ;PR12.c: 588: PORTB=data;
"588
[e = _PORTB _data ]
[; ;PR12.c: 589: delay(300);
"589
[e ( _delay (1 -> -> -> 300 `i `l `ul ]
[; ;PR12.c: 590: e_pulse();
"590
[e ( _e_pulse ..  ]
[; ;PR12.c: 591: }
"591
[e :UE 298 ]
}
"593
[v _e_pulse `(v ~T0 1 ef ]
{
[; ;PR12.c: 592: void e_pulse(void)
[; ;PR12.c: 593: {
[e :U _e_pulse ]
[f ]
[; ;PR12.c: 594: RA1=1;
"594
[e = _RA1 -> -> 1 `i `b ]
[; ;PR12.c: 595: delay(300);
"595
[e ( _delay (1 -> -> -> 300 `i `l `ul ]
[; ;PR12.c: 596: RA1=0;
"596
[e = _RA1 -> -> 0 `i `b ]
[; ;PR12.c: 597: delay(300);
"597
[e ( _delay (1 -> -> -> 300 `i `l `ul ]
[; ;PR12.c: 598: }
"598
[e :UE 299 ]
}
"600
[v _lcd_goto `(v ~T0 1 ef1`uc ]
{
[; ;PR12.c: 599: void lcd_goto(unsigned char data)
[; ;PR12.c: 600: {
[e :U _lcd_goto ]
[v _data `uc ~T0 1 r1 ]
[f ]
[; ;PR12.c: 601: if(data<16)
"601
[e $ ! < -> _data `i -> 16 `i 301  ]
[; ;PR12.c: 602: {
"602
{
[; ;PR12.c: 603: send_config(0x80+data);
"603
[e ( _send_config (1 -> + -> 128 `i -> _data `i `uc ]
"604
}
[; ;PR12.c: 604: }
[e $U 302  ]
"605
[e :U 301 ]
[; ;PR12.c: 605: else
[; ;PR12.c: 606: {
"606
{
[; ;PR12.c: 607: data=data-20;
"607
[e = _data -> - -> _data `i -> 20 `i `uc ]
[; ;PR12.c: 608: send_config(0xc0+data);
"608
[e ( _send_config (1 -> + -> 192 `i -> _data `i `uc ]
"609
}
[e :U 302 ]
[; ;PR12.c: 609: }
[; ;PR12.c: 610: }
"610
[e :UE 300 ]
}
"612
[v _lcd_clr `(v ~T0 1 ef ]
{
[; ;PR12.c: 611: void lcd_clr(void)
[; ;PR12.c: 612: {
[e :U _lcd_clr ]
[f ]
[; ;PR12.c: 613: send_config(0x01);
"613
[e ( _send_config (1 -> -> 1 `i `uc ]
[; ;PR12.c: 614: delay(350);
"614
[e ( _delay (1 -> -> -> 350 `i `l `ul ]
[; ;PR12.c: 615: }
"615
[e :UE 303 ]
}
"617
[v _send_string `(v ~T0 1 ef1`*Cuc ]
{
[; ;PR12.c: 616: void send_string(const char *s)
[; ;PR12.c: 617: {
[e :U _send_string ]
[v _s `*Cuc ~T0 1 r1 ]
[f ]
"618
[v _i `uc ~T0 1 a ]
[; ;PR12.c: 618: unsigned char i=0;
[e = _i -> -> 0 `i `uc ]
[; ;PR12.c: 619: while (s && *s)send_char (*s++);
"619
[e $U 305  ]
[e :U 306 ]
[e ( _send_char (1 *U ++ _s * -> -> 1 `i `x -> -> # *U _s `i `x ]
[e :U 305 ]
[e $ && != _s -> -> 0 `i `*Cuc != -> *U _s `i -> -> -> 0 `i `Cuc `i 306  ]
[e :U 307 ]
[; ;PR12.c: 620: }
"620
[e :UE 304 ]
}
"622
[v _send_dec `(v ~T0 1 ef2`ul`uc ]
{
[; ;PR12.c: 621: void send_dec(unsigned long data,unsigned char num_dig)
[; ;PR12.c: 622: {
[e :U _send_dec ]
[v _data `ul ~T0 1 r1 ]
[v _num_dig `uc ~T0 1 r2 ]
[f ]
[; ;PR12.c: 624: if(num_dig>=10)
"624
[e $ ! >= -> _num_dig `i -> 10 `i 309  ]
[; ;PR12.c: 625: {
"625
{
[; ;PR12.c: 626: data=data%10000000000;
"626
[e = _data % _data -> -> 1410065408 `l `ul ]
[; ;PR12.c: 627: send_char(data/1000000000+0x30);
"627
[e ( _send_char (1 -> + / _data -> -> 1000000000 `l `ul -> -> -> 48 `i `l `ul `uc ]
"628
}
[e :U 309 ]
[; ;PR12.c: 628: }
[; ;PR12.c: 629: if(num_dig>=9)
"629
[e $ ! >= -> _num_dig `i -> 9 `i 310  ]
[; ;PR12.c: 630: {
"630
{
[; ;PR12.c: 631: data=data%1000000000;
"631
[e = _data % _data -> -> 1000000000 `l `ul ]
[; ;PR12.c: 632: send_char(data/100000000+0x30);
"632
[e ( _send_char (1 -> + / _data -> -> 100000000 `l `ul -> -> -> 48 `i `l `ul `uc ]
"633
}
[e :U 310 ]
[; ;PR12.c: 633: }
[; ;PR12.c: 634: if(num_dig>=8)
"634
[e $ ! >= -> _num_dig `i -> 8 `i 311  ]
[; ;PR12.c: 635: {
"635
{
[; ;PR12.c: 636: data=data%100000000;
"636
[e = _data % _data -> -> 100000000 `l `ul ]
[; ;PR12.c: 637: send_char(data/10000000+0x30);
"637
[e ( _send_char (1 -> + / _data -> -> 10000000 `l `ul -> -> -> 48 `i `l `ul `uc ]
"638
}
[e :U 311 ]
[; ;PR12.c: 638: }
[; ;PR12.c: 639: if(num_dig>=7)
"639
[e $ ! >= -> _num_dig `i -> 7 `i 312  ]
[; ;PR12.c: 640: {
"640
{
[; ;PR12.c: 641: data=data%10000000;
"641
[e = _data % _data -> -> 10000000 `l `ul ]
[; ;PR12.c: 642: send_char(data/1000000+0x30);
"642
[e ( _send_char (1 -> + / _data -> -> 1000000 `l `ul -> -> -> 48 `i `l `ul `uc ]
"643
}
[e :U 312 ]
[; ;PR12.c: 643: }
[; ;PR12.c: 644: if(num_dig>=6)
"644
[e $ ! >= -> _num_dig `i -> 6 `i 313  ]
[; ;PR12.c: 645: {
"645
{
[; ;PR12.c: 646: data=data%1000000;
"646
[e = _data % _data -> -> 1000000 `l `ul ]
[; ;PR12.c: 647: send_char(data/100000+0x30);
"647
[e ( _send_char (1 -> + / _data -> -> 100000 `l `ul -> -> -> 48 `i `l `ul `uc ]
"648
}
[e :U 313 ]
[; ;PR12.c: 648: }
[; ;PR12.c: 649: if(num_dig>=5)
"649
[e $ ! >= -> _num_dig `i -> 5 `i 314  ]
[; ;PR12.c: 650: {
"650
{
[; ;PR12.c: 651: data=data%100000;
"651
[e = _data % _data -> -> 100000 `l `ul ]
[; ;PR12.c: 652: send_char(data/10000+0x30);
"652
[e ( _send_char (1 -> + / _data -> -> -> 10000 `i `l `ul -> -> -> 48 `i `l `ul `uc ]
"653
}
[e :U 314 ]
[; ;PR12.c: 653: }
[; ;PR12.c: 654: if(num_dig>=4)
"654
[e $ ! >= -> _num_dig `i -> 4 `i 315  ]
[; ;PR12.c: 655: {
"655
{
[; ;PR12.c: 656: data=data%10000;
"656
[e = _data % _data -> -> -> 10000 `i `l `ul ]
[; ;PR12.c: 657: send_char(data/1000+0x30);
"657
[e ( _send_char (1 -> + / _data -> -> -> 1000 `i `l `ul -> -> -> 48 `i `l `ul `uc ]
"658
}
[e :U 315 ]
[; ;PR12.c: 658: }
[; ;PR12.c: 659: if(num_dig>=3)
"659
[e $ ! >= -> _num_dig `i -> 3 `i 316  ]
[; ;PR12.c: 660: {
"660
{
[; ;PR12.c: 661: data=data%1000;
"661
[e = _data % _data -> -> -> 1000 `i `l `ul ]
[; ;PR12.c: 662: send_char(data/100+0x30);
"662
[e ( _send_char (1 -> + / _data -> -> -> 100 `i `l `ul -> -> -> 48 `i `l `ul `uc ]
"663
}
[e :U 316 ]
[; ;PR12.c: 663: }
[; ;PR12.c: 664: if(num_dig>=2)
"664
[e $ ! >= -> _num_dig `i -> 2 `i 317  ]
[; ;PR12.c: 665: {
"665
{
[; ;PR12.c: 666: data=data%100;
"666
[e = _data % _data -> -> -> 100 `i `l `ul ]
[; ;PR12.c: 667: send_char(data/10+0x30);
"667
[e ( _send_char (1 -> + / _data -> -> -> 10 `i `l `ul -> -> -> 48 `i `l `ul `uc ]
"668
}
[e :U 317 ]
[; ;PR12.c: 668: }
[; ;PR12.c: 669: if(num_dig>=1)
"669
[e $ ! >= -> _num_dig `i -> 1 `i 318  ]
[; ;PR12.c: 670: {
"670
{
[; ;PR12.c: 671: data=data%10;
"671
[e = _data % _data -> -> -> 10 `i `l `ul ]
[; ;PR12.c: 672: send_char(data+0x30);
"672
[e ( _send_char (1 -> + _data -> -> -> 48 `i `l `ul `uc ]
"673
}
[e :U 318 ]
[; ;PR12.c: 673: }
[; ;PR12.c: 674: }
"674
[e :UE 308 ]
}
[a 5C 84 72 85 0 ]
[a 12C 84 72 85 0 ]
[a 19C 84 72 85 0 ]
[a 7C 83 65 84 0 ]
[a 14C 83 65 84 0 ]
[a 21C 83 65 84 0 ]
[a 1C 83 85 78 0 ]
[a 8C 83 85 78 0 ]
[a 15C 83 85 78 0 ]
[a 2C 77 79 78 0 ]
[a 9C 77 79 78 0 ]
[a 16C 77 79 78 0 ]
[a 6C 70 82 73 0 ]
[a 13C 70 82 73 0 ]
[a 20C 70 82 73 0 ]
[a 3C 84 85 69 0 ]
[a 10C 84 85 69 0 ]
[a 17C 84 85 69 0 ]
[a 4C 87 69 68 0 ]
[a 11C 87 69 68 0 ]
[a 18C 87 69 68 0 ]
